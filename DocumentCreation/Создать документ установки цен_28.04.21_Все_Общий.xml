<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать документ установки цен</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">УстановкаЦенНоменклатуры</Value>
		<Value xsi:type="xs:string">// Берем ранее созданный документ
Если ЗначениеЗаполнено(Источник.Документ1С) Тогда
	Приемник = Источник.Документ1С.ПолучитьОбъект();
	ТекстЛогаСобытий = "Перезаписан уже существующий документ для " + Строка(Источник.Ссылка);
	ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);	
КонецЕсли;

ИмяДокументаПрименика = "Установка цен номенклатуры 1С";

ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Закупочные");
Если ЗначениеЗаполнено(ТипЦен) Тогда
	Приемник.Дата = ТекущаяДата();
	Приемник.ТипЦен = ТипЦен;
	Приемник.Товары.Очистить();
	ЗаписатьДокумент = Истина;
	Для каждого Стр Из Источник.ПрайсЛист Цикл
		Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			НовСтр = Приемник.Товары.Добавить();
			НовСтр.Номенклатура = Стр.Номенклатура;
			НовСтр.Валюта       = Источник.Валюта;
			Если Приемник.ТипЦен.ЦенаВключаетНДС Тогда
				НовСтр.Цена = Стр.ЦенаВключаяНДС;
			Иначе	
				НовСтр.Цена = Стр.ЦенаБезНДС;
			КонецЕсли;
		Иначе
			ТекстЛогаСобытий = "Номенклатура не заполнена. " + Стр.ПолноеНазваниеПродукта + " - " + Стр.ШтрихКодПродукта
			+ ". " + ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) + " не создана."; 
			ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
			ЗаписатьДокумент = Ложь;
		КонецЕсли;		
	КонецЦикла;
	
	Если ЗаписатьДокумент = Истина Тогда
		Попытка
			Приемник.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Приемник.Записать(РежимЗаписиДокумента.Запись);
			ТекстЛогаСобытий = ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) + " не создана!!! " + СокрЛП(ОписаниеОшибки()); 
			ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		КонецПопытки;
		
		Если ЗначениеЗаполнено(Приемник.Ссылка) Тогда
			ИсточникОбъект = Источник.ПолучитьОбъект();
			ИсточникОбъект.Документ1С = Приемник.Ссылка;
			ИсточникОбъект.Записать();
		КонецЕсли;   	
	КонецЕсли;	
Иначе
	ТекстЛогаСобытий = "Не найден тип цен. " + ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) + " не создана."; 
	ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
	
КонецЕсли;
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">PRICAT</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать документ установки цен</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
	</row>
</ValueTree>