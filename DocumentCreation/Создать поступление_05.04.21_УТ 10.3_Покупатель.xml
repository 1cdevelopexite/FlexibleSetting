<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать поступление</Value>
		<Value xsi:type="xs:string">ДокументЗаказа</Value>
		<Value xsi:type="xs:string">Заказ поставщику</Value>
		<Value xsi:type="xs:string">ПоступлениеТоваровУслуг</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:nil="true"/>
		<Value xsi:nil="true"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">Если КэшированныеЗначения = Неопределено Тогда
	КэшированныеЗначения = новый Структура;
КонецЕсли;

ДокументDESADV = Неопределено;
Если ЗначениеЗаполнено(Цепочка.ЭлектронныйДокумент) Тогда 
	ДокументDESADV = Цепочка.ЭлектронныйДокумент;
КонецЕсли;

// Получение общих для всех документов значений.
СоздаватьДокумент1СПроведенным			= Неопределено;
Если НЕ КэшированныеЗначения.Свойство("СоздаватьДокумент1СПроведенным", СоздаватьДокумент1СПроведенным) Тогда
	СоздаватьДокумент1СПроведенным		= Настройка_Параметр_Прочитать("ЭКОМ_СоздаватьДокументПоступления1СПроведенным", Ложь);
	КэшированныеЗначения.Вставить("СоздаватьДокумент1СПроведенным", СоздаватьДокумент1СПроведенным);
КонецЕсли;

ИмяДокументаПрименика = "Поступление 1С";

Приемник.Заполнить(Источник.Ссылка);
Приемник.Дата = ТекущаяДата();

// Запишем документ в базу
Если Приемник.Товары.Количество() = 0 Тогда
    ТекстЛогаСобытий = "Документ """ + ИмяДокументаПрименика + """ по документу " + Строка(Источник.Ссылка) +
    " не создан, т.к. не заполнены товары, возможно документ был сформирован вручную, проверьте документ.";
    ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
Иначе    
	Приемник.Записать(); //Для получения ссылки
	
    // Поиск документа ЭКОМ
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	ЭКОМ_ДокументыТЧ_Товары.Ссылка.НакладнаяНомер КАК НакладнаяНомер,
                   |	ЭКОМ_ДокументыТЧ_Товары.Ссылка.НакладнаяДата КАК НакладнаяДата,
                   |	ЭКОМ_ДокументыТЧ_Товары.Номенклатура КАК Номенклатура,
                   |	ЭКОМ_ДокументыТЧ_Товары.КоличествоПоставляемое КАК КоличествоПоставляемое,
                   |	ЭКОМ_ДокументыТЧ_Товары.Ссылка КАК ЭКОМ_Документ
                   |ИЗ
                   |	РегистрСведений.ЭКОМ_ЦепочкиДокументовПокупателя КАК ЭКОМ_ЦепочкиДокументовПокупателя
                   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭКОМ_Документы.ТЧ_Товары КАК ЭКОМ_ДокументыТЧ_Товары
                   |		ПО ЭКОМ_ЦепочкиДокументовПокупателя.DESADV = ЭКОМ_ДокументыТЧ_Товары.Ссылка
                   |ГДЕ
                   |	ЭКОМ_ЦепочкиДокументовПокупателя.Заказ = &amp;Заказ";
				   Если Не ДокументDESADV = Неопределено Тогда
						Запрос.Текст = Запрос.Текст + "
						|    И ЭКОМ_ЦепочкиДокументовПокупателя.DESADV = &amp;ДокументDESADV";
				   КонецЕсли;

    Запрос.УстановитьПараметр("Заказ", Источник.Ссылка);
	Запрос.УстановитьПараметр("ДокументDESADV", ДокументDESADV);
    РезультатЗапроса = Запрос.Выполнить();
    Если НЕ РезультатЗапроса.Пустой() Тогда
        Выборка = РезультатЗапроса.Выгрузить();
        Для Каждого Строка Из Приемник.Товары Цикл
			// Обновляем табличную часть.
            СтрокаТабличнойЧасти = Выборка.Найти(Строка.Номенклатура, "Номенклатура");    
			Если СтрокаТабличнойЧасти = Неопределено Тогда
				Строка.Количество = 0;
			ИначеЕсли НЕ СтрокаТабличнойЧасти.КоличествоПоставляемое = Строка.Количество Тогда  
                Строка.Количество = СтрокаТабличнойЧасти.КоличествоПоставляемое;
				ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, Приемник);
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, 			Приемник);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти,		Приемник);
            КонецЕсли;          
		КонецЦикла;
		// Удаляем строки с пустым количеством.
		Для Каждого Строка Из Приемник.Товары.НайтиСтроки(Новый Структура("Количество", 0)) Цикл
			Приемник.Товары.Удалить(Строка);
		КонецЦикла;
		
		ЭКОМ_ДокументОбъект = Выборка[0].ЭКОМ_Документ.ПолучитьОбъект();
	    ЭКОМ_ДокументОбъект.ДокументыСвязанные.Очистить();
	    Нов = ЭКОМ_ДокументОбъект.ДокументыСвязанные.Добавить();
	    Нов.ДокументСвязанный = Приемник.Ссылка;
	    ЭКОМ_ДокументОбъект.Записать();
		
		Приемник.НомерВходящегоДокумента = Выборка[0].НакладнаяНомер; 
		Приемник.ДатаВходящегоДокумента  = Выборка[0].НакладнаяДата;
	Иначе
		СоздаватьДокумент1СПроведенным = Ложь;
        ТекстЛогаСобытий = "Документ " + Строка(Источник.Ссылка) + " не найден в цепочке."; 
        ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);            
	КонецЕсли; 
	
	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
    Если ОшибокНеОбнаружено Тогда
        Попытка
            Приемник.Записать(?(СоздаватьДокумент1СПроведенным, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
        Исключение
            Ошибка = ОписаниеОшибки();
            ТекстОшибки = НСтр("ru = 'Ошибка %РежимЗаписиДокумента% документа на основе %Источник%'" + ОписаниеОшибки());
            ТекстОшибки = СтрЗаменить(ТекстОшибки, "%РежимЗаписиДокумента%", ?(СоздаватьДокумент1СПроведенным, "проведения", "записи"));
            ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Источник%", Строка(Источник));
            ЗаписатьЛогСобытий(ЛогСобытий, ТекстОшибки);
        КонецПопытки;
	КонецЕсли;
		
КонецЕсли;</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>