<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать возврат от покупателя</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ВозвратТоваровОтПокупателя</Value>
		<Value xsi:type="xs:string">	ИмяДокументаПрименика = "Возврат товаров поставщику 1С";
	
	Отборы = Новый Структура("RETANN", Источник);
	Результат = ЭКОМ_ОбщегоНазначения.ПолучитьПоляЦепочкиДокументов("ЭКОМ_ЦепочкиДокументовПоставщика", "Накладная", Отборы);
	Если Результат.Успешно Тогда 
		Приемник.Заполнить(Результат.Накладная);
		Приемник.Дата = ТекущаяДата();
		
		Запрос 		 = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		               |	МАКСИМУМ(РеализацияТоваровУслугТовары.СчетУчета) КАК СчетУчета,
		               |	МАКСИМУМ(РеализацияТоваровУслугТовары.СчетДоходов) КАК СчетДоходов,
		               |	МАКСИМУМ(РеализацияТоваровУслугТовары.Субконто) КАК Субконто,
		               |	МАКСИМУМ(РеализацияТоваровУслугТовары.СчетУчетаНДСПоРеализации) КАК СчетУчетаНДСПоРеализации,
		               |	МАКСИМУМ(РеализацияТоваровУслугТовары.СчетРасходов) КАК СчетРасходов
		               |ПОМЕСТИТЬ РеализацияТовары
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		               |ГДЕ
		               |	РеализацияТоваровУслугТовары.Ссылка = &amp;ДокументРеализации
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РеализацияТоваровУслугТовары.Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЭКОМ_ДокументыТЧ_Товары.Номенклатура КАК Номенклатура,
		               |	ЭКОМ_ДокументыТЧ_Товары.КоличествоПринятое КАК Количество,
		               |	ЭКОМ_ДокументыТЧ_Товары.КоличествоПринятое КАК КоличествоУпаковок,
		               |	ЭКОМ_ДокументыТЧ_Товары.Цена КАК Цена,
		               |	ЭКОМ_ДокументыТЧ_Товары.Сумма КАК Сумма,
		               |	ЭКОМ_ДокументыТЧ_Товары.СуммаНДС КАК СуммаНДС,
		               |	ВЫБОР
		               |		КОГДА ЭКОМ_ДокументыТЧ_Товары.СтавкаНДС = 10
		               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		               |		КОГДА ЭКОМ_ДокументыТЧ_Товары.СтавкаНДС = 18
		               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		               |		КОГДА ЭКОМ_ДокументыТЧ_Товары.СтавкаНДС = 20
		               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		               |	КОНЕЦ КАК СтавкаНДС,
		               |	ЭКОМ_ДокументыТЧ_Товары.ЕдиницаИзмерения КАК Упаковка,
		               |	ЭКОМ_ДокументыТЧ_Товары.Сумма_с_НДС КАК СуммаСНДС,
		               |	ЕСТЬNULL(РеализацияТовары.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
		               |	ЕСТЬNULL(РеализацияТовары.СчетДоходов, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетДоходов,
		               |	ЕСТЬNULL(РеализацияТовары.Субконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто,
		               |	ЕСТЬNULL(РеализацияТовары.СчетУчетаНДСПоРеализации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаНДСПоРеализации,
		               |	ЕСТЬNULL(РеализацияТовары.СчетРасходов, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетРасходов
		               |ИЗ
		               |	Документ.ЭКОМ_Документы.ТЧ_Товары КАК ЭКОМ_ДокументыТЧ_Товары
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РеализацияТовары КАК РеализацияТовары
		               |		ПО ЭКОМ_ДокументыТЧ_Товары.Номенклатура = РеализацияТовары.Номенклатура
		               |ГДЕ
		               |	ЭКОМ_ДокументыТЧ_Товары.Ссылка = &amp;Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("ДокументРеализации", Результат.Накладная);
		Результат = Запрос.Выполнить();
		Приемник.Товары.Очистить();    
		Если Не Результат.Пустой() Тогда
			Выгрузка = Результат.Выгрузить();
			Приемник.Товары.Загрузить(Выгрузка);	
			ОбщаяСумма = Выгрузка.Итог("СуммаСНДС");
			Если Не ОбщаяСумма = Неопределено Тогда
				Приемник.СуммаДокумента = ОбщаяСумма;
			КонецЕсли;
		КонецЕсли;
		
		// Запись документа
		Если Приемник.Товары.Количество() = 0 Тогда
		    ТекстЛогаСобытий = "Документ " + ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) +
		    " не создан, т.к. не удалось заполнить табличную часть товары";
		    ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		Иначе    
		    Попытка
		        Приемник.Записать(РежимЗаписиДокумента.Запись);
		    Исключение               	       
		        ТекстЛогаСобытий = ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) + " не создан!!! " + СокрЛП(ОписаниеОшибки()); 
		        ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		    КонецПопытки;
		КонецЕсли;

	КонецЕсли; //Результат.Успешно</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">ЭКОМ_Документ_RETANN</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать возврат от покупателя</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
	</row>
</ValueTree>