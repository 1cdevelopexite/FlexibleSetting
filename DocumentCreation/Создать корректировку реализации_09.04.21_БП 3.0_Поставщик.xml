<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать корректировку реализации</Value>
		<Value xsi:type="xs:string">Реализация товаров и услуг</Value>
		<Value xsi:type="xs:string">КорректировкаРеализации</Value>
		<Value xsi:type="xs:string">  ИмяДокументаПрименика = "Корректировка 1С";
  ПроводитьРеализацию = Настройка_Параметр_Прочитать("ЭКОМ_СоздаватьДокументРеализация1СПроведенным");
  
  Запрос = Новый Запрос;
  Запрос.Текст = 
  "ВЫБРАТЬ
  |	ЭКОМ_ЦепочкиДокументовПоставщика.RECADV КАК RECADV,
  |	ЭКОМ_ЦепочкиДокументовПоставщика.Накладная КАК РеализацияСсылка,
  |	ЭКОМ_ЦепочкиДокументовПоставщика.ORDERNUMBER КАК ORDERNUMBER,
  |	ЭКОМ_ЦепочкиДокументовПоставщика.ORDERDATE КАК ORDERDATE,
  |	ЭКОМ_ЦепочкиДокументовПоставщика.RECADV.ФайлНомер КАК RECADVФайлНомер,
  |	ЭКОМ_ЦепочкиДокументовПоставщика.RECADV.ФайлДата КАК RECADVФайлДата,
  |	ЭКОМ_ЦепочкиДокументовПоставщика.Накладная_Кор КАК Накладная_Кор
  |ИЗ
  |	РегистрСведений.ЭКОМ_ЦепочкиДокументовПоставщика КАК ЭКОМ_ЦепочкиДокументовПоставщика
  |ГДЕ
  |	ЭКОМ_ЦепочкиДокументовПоставщика.Накладная = &amp;Документ";
  
  Запрос.УстановитьПараметр("Документ", Источник);
  
  РезультатЗапроса = Запрос.Выполнить();   
  Если НЕ РезультатЗапроса.Пустой() Тогда
	  Запись = РезультатЗапроса.Выбрать();
	  Запись.Следующий();
	  Если ЗначениеЗаполнено(Запись.RECADV) Тогда
		  
		  // Берем ранее созданный документ
		  Если ЗначениеЗаполнено(Запись.Накладная_Кор) Тогда
			  Приемник = Запись.Накладная_Кор.ПолучитьОбъект();
			  ТекстЛогаСобытий = "Перезаписан уже существующий документ " + ИмяДокументаПрименика + " по заказу № " + Запись.ORDERNUMBER + " от " + Запись.ORDERDATE;
			  ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий); 
		 КонецЕсли;
		  
		  Приемник.Заполнить(Запись.РеализацияСсылка);
		  
		  Приемник.Дата = ТекущаяДата();
		  Приемник.Комментарий = "Заказ № %ORDERNUMBER% от %ORDERDATE%";
		  Приемник.Комментарий = СтрЗаменить(Приемник.Комментарий, "%ORDERNUMBER%", Запись.ORDERNUMBER);
		  Приемник.Комментарий = СтрЗаменить(Приемник.Комментарий, "%ORDERDATE%", Формат(Запись.ORDERDATE, "ДФ=dd.MM.yyyy"));
		  Приемник.ДокументРеализации = Запись.РеализацияСсылка;
		  Приемник.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение;
		  
		  ЕстьКорректировка = Ложь;
		  Для Каждого СтрокаКорр Из Приемник.Товары Цикл
			  СтрокаRECADV = Запись.RECADV.ТЧ_Товары.Найти(СтрокаКорр.Номенклатура, "Номенклатура");
			  Если СтрокаRECADV = Неопределено Тогда
				  СтрокаКорр.Количество = 0;
			  Иначе
				  СтрокаКорр.Количество = СтрокаRECADV.КоличествоПринятое;
			  КонецЕсли;
			  
			  КоличествоКорректируемое = ?(ЗначениеЗаполнено(СтрокаКорр.КоличествоДоКорректировки), СтрокаКорр.КоличествоДоКорректировки, СтрокаКорр.КоличествоДоИзменения);
			  Если НЕ КоличествоКорректируемое = СтрокаКорр.Количество Тогда
				  ЕстьКорректировка = Истина;
			  КонецЕсли;
			  
			  ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаКорр);
		  КонецЦикла;
		  
		  Если ЕстьКорректировка Тогда
			  Попытка
				  Приемник.ПометкаУдаления = Ложь; 
				  Приемник.Записать(?(ПроводитьРеализацию, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				  
				  ТекстЛогаСобытий = "Создан новый документ " + ИмяДокументаПрименика + " по заказу № " + Запись.ORDERNUMBER + " от " + Запись.ORDERDATE;
			      ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);

			  Исключение
				  Приемник.Записать(РежимЗаписиДокумента.Запись);
				  ТекстЛогаСобытий = "Документ не создан!!! - " + ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка)  + СокрЛП(ОписаниеОшибки());
				  ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
				  
			  КонецПопытки;
		  Иначе
			  ТекстЛогаСобытий = "Документ """ + ИмяДокументаПрименика + """ не создан по документу " + Строка(Источник.Ссылка) +
			  ", т.к. рахождения по RECADV отсутствуют.";
			  ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);

		  КонецЕсли;		  		  
	  Иначе
		  ТекстЛогаСобытий = "Документ """ + ИмяДокументаПрименика + """ не создан по документу " + Строка(Источник.Ссылка) +
		  ", т.к. отсутствует документ RECADV.";
		  ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		  
	  КонецЕсли;
  Иначе
	  ТекстЛогаСобытий = "Документ """ + ИмяДокументаПрименика + """ не создан по документу " + Строка(Источник.Ссылка) +
		  ", т.к. документ отсутсвует в цепочке.";
      ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);

  КонецЕсли;
  
  </Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">ДокументРеализации</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">3</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать корректировку реализации товаров</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
		</Value>
	</row>
</ValueTree>