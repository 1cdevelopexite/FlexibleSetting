<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать заказ клиента</Value>
		<Value xsi:type="xs:string">ЭКОМ Документы</Value>
		<Value xsi:type="xs:string">Счет покупателю</Value>
		<Value xsi:type="xs:string">// Настройка создания дополнительных заказов
СоблюдаетсяПравилоОдинКОдномуДляЗаказа=Истина;
	
ИмяДокументаПрименика = "Заказ 1С";

ЭКОМ_СоздаватьДокументЗаказ1СПроведенным = Настройка_Параметр_Прочитать("ЭКОМ_СоздаватьДокументЗаказ1СПроведенным");
ЭКОМ_ЗаказыЗагружатьТекущейДатой = Настройка_Параметр_Прочитать("ЭКОМ_ЗаказыЗагружатьТекущейДатой");

ОсновнойБанковскийСчетОрганизацииЗаполнен = ПроверкаРеквизитовОрганизации.ОсновнойБанковскийСчетОрганизацииЗаполнен(Приемник.Организация);

ДатаЗаказа = ТекущаяДата();
Если НЕ ЭКОМ_ЗаказыЗагружатьТекущейДатой Тогда
	Если ЗначениеЗаполнено(Источник.ФайлДата) Тогда
		ДатаЗаказа = Источник.ФайлДата;
	КонецЕсли;
КонецЕсли;

// Основной запрос для заполнения шапки документа.
Запрос = Новый Запрос;
Запрос.Текст = 
    "ВЫБРАТЬ
    |	ЭКОМ_Документы.Ссылка КАК ORDER,
    |	ЕСТЬNULL(ЭКОМ_GLN.Контрагент_ЦеныИз1С, ЛОЖЬ) КАК ИспользоватьЦеныИз1С,
    |	ЭКОМ_ТочкиДоставки.Адрес КАК АдресТочкиДоставки,
    |	СгруппированнаяЦепочка.Заказ КАК ЗаказВЦепочке,
    |	ЭКОМ_Документы.ТочкаДоставки КАК ТочкаДоставки,
    |	ЭКОМ_ИнфоПоля.СхемаПодсчета КАК СхемаПодсчета,
    |	СгруппированнаяЦепочка.ORDERNUMBER КАК ORDERNUMBER,
    |	СгруппированнаяЦепочка.ORDERDATE КАК ORDERDATE
    |ИЗ
    |	Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭКОМ_GLN КАК ЭКОМ_GLN
    |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭКОМ_ИнфоПоля КАК ЭКОМ_ИнфоПоля
    |			ПО ЭКОМ_GLN.Контрагент_ФорматЭСФ = ЭКОМ_ИнфоПоля.ФорматУПД
    |		ПО ЭКОМ_Документы.Контрагент = ЭКОМ_GLN.Объект
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭКОМ_ТочкиДоставки КАК ЭКОМ_ТочкиДоставки
    |		ПО ЭКОМ_Документы.ТочкаДоставки = ЭКОМ_ТочкиДоставки.Объект
    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDER КАК ORDER,
    |			МАКСИМУМ(ЭКОМ_ЦепочкиДокументовПоставщика.Заказ) КАК Заказ,
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDERNUMBER КАК ORDERNUMBER,
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDERDATE КАК ORDERDATE
    |		ИЗ
    |			РегистрСведений.ЭКОМ_ЦепочкиДокументовПоставщика КАК ЭКОМ_ЦепочкиДокументовПоставщика
    |		ГДЕ
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDER = &amp;ИсточникДокумент
    |		
    |		СГРУППИРОВАТЬ ПО
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDER,
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDERNUMBER,
    |			ЭКОМ_ЦепочкиДокументовПоставщика.ORDERDATE) КАК СгруппированнаяЦепочка
    |		ПО ЭКОМ_Документы.Ссылка = СгруппированнаяЦепочка.ORDER
    |ГДЕ
    |	ЭКОМ_Документы.Ссылка = &amp;ИсточникДокумент";
Запрос.УстановитьПараметр("ИсточникДокумент", Источник);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
Выборка.Следующий();
ИспользоватьЦеныИз1С  = Выборка.ИспользоватьЦеныИз1С;
ТочкаДоставки         = Выборка.ТочкаДоставки;
АдресТочкиДоставки    = Выборка.АдресТочкиДоставки;
СхемаПодсчетаОбратная = Выборка.СхемаПодсчета;
ЗаказВЦепочке         = Выборка.ЗаказВЦепочке;
ORDERNUMBER           = Выборка.ORDERNUMBER;
ORDERDATE             = Выборка.ORDERDATE;

// Берем ранее созданный документ
Если ЗначениеЗаполнено(ЗаказВЦепочке) 
		И СоблюдаетсяПравилоОдинКОдномуДляЗаказа = Истина Тогда
		Приемник = ЗаказВЦепочке.ПолучитьОбъект();
		ТекстЛогаСобытий = "Перезаписан уже существующий документ для " + Строка(Источник.Ссылка) + " по заказу № " + ORDERNUMBER + " от " +  ORDERDATE;
		ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий); 
		
ИначеЕсли ЗначениеЗаполнено(ЗаказВЦепочке) 
		И СоблюдаетсяПравилоОдинКОдномуДляЗаказа = Ложь Тогда
		ТекстЛогаСобытий = "Создан дополнительный документ для " + Строка(Источник.Ссылка) + " по заказу № " + ORDERNUMBER + " от " +  ORDERDATE;
		ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		
КонецЕсли;
	
ЗаполнитьЗначенияСвойств(Приемник, Источник);

Приемник.Номер                   = Неопределено; // Заполняется системно
Приемник.Дата                    = ДатаЗаказа;
Приемник.ДоговорКонтрагента      = ТочкаДоставки;
Приемник.ТипЦен                  = Приемник.ДоговорКонтрагента.ТипЦен;
Приемник.СуммаВключаетНДС        = Приемник.ТипЦен.ЦенаВключаетНДС;
Приемник.Ответственный           = ПользователиКлиентСервер.ТекущийПользователь();
Приемник.КурсВзаиморасчетов      = 1;
Приемник.КратностьВзаиморасчетов = 1;
Приемник.АдресДоставки           = АдресТочкиДоставки;
Приемник.ОрганизацияПолучатель   = Приемник.Организация;
Приемник.Комментарий             = "Заказ №" + ORDERNUMBER + " от " + Формат(ORDERDATE, "ДЛФ=Д");
Приемник.СтруктурнаяЕдиница      = ОсновнойБанковскийСчетОрганизацииЗаполнен;
Если НЕ ЗначениеЗаполнено(Приемник.СтруктурнаяЕдиница) Тогда
     Приемник.СтруктурнаяЕдиница  = Приемник.Организация.ОсновнойБанковскийСчет;	
КонецЕсли;

// Табличная часть
ЗапросТЧ = Новый Запрос;
ЗапросТЧ.Текст = 
"ВЫБРАТЬ
|	ЭКОМ_ДокументыТЧ_Товары.Номенклатура КАК Номенклатура,
|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК ЦенаИз1С,
|	ЭКОМ_ДокументыТЧ_Товары.КоличествоПоставляемое КАК КоличествоПоставляемое,
|	ЭКОМ_ДокументыТЧ_Товары.ЦенаСНДС КАК ЦенаСНДС,
|	ЭКОМ_ДокументыТЧ_Товары.СтавкаНДС КАК СтавкаНДС,
|	ЭКОМ_ДокументыТЧ_Товары.Сумма_с_НДС КАК Сумма_с_НДС,
|	ЭКОМ_ДокументыТЧ_Товары.Цена КАК Цена,
|	ЭКОМ_ДокументыТЧ_Товары.Сумма КАК Сумма
|ИЗ
|	Документ.ЭКОМ_Документы.ТЧ_Товары КАК ЭКОМ_ДокументыТЧ_Товары
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&amp;ДатаЗаказа, ТипЦен = &amp;ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
|		ПО ЭКОМ_ДокументыТЧ_Товары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
|ГДЕ
|	ЭКОМ_ДокументыТЧ_Товары.Ссылка = &amp;Ссылка";

ЗапросТЧ.УстановитьПараметр("ТипЦен"    , Приемник.ДоговорКонтрагента.ТипЦен);
ЗапросТЧ.УстановитьПараметр("ДатаЗаказа", Источник.ЗаказДата);
ЗапросТЧ.УстановитьПараметр("Ссылка"    , Источник.Ссылка);
РезультатЗапросаТЧ = ЗапросТЧ.Выполнить();
ВыборкаТЧ = РезультатЗапросаТЧ.Выбрать();
Пока ВыборкаТЧ.Следующий() Цикл
	НовСтр = Приемник.Товары.Добавить();        	    	   
	НовСтр.Количество   = ВыборкаТЧ.КоличествоПоставляемое;
	НовСтр.СтавкаНДС    = СтавкаНДССсылка(ВыборкаТЧ.СтавкаНДС);
    НовСтр.Номенклатура = ВыборкаТЧ.Номенклатура;
	
	// Цена из документа или из базы 1С
	Цена = 0;
	Если ИспользоватьЦеныИз1С = Истина 
		И НЕ ВыборкаТЧ.ЦенаИз1С = 0 Тогда
		Цена = ВыборкаТЧ.ЦенаИз1С;
	Иначе
		Если Приемник.СуммаВключаетНДС Тогда
			Цена = ВыборкаТЧ.ЦенаСНДС;
		Иначе
			Цена = ВыборкаТЧ.Цена;		
		КонецЕсли;		
	КонецЕсли;
	
	// Цена без НДС или с НДС
	Если Приемник.СуммаВключаетНДС Тогда
		ЦенаСНДС   = Цена;
		ЦенаБезНДС = Цена/((100 + ВыборкаТЧ.СтавкаНДС)/100);
	Иначе
		ЦенаСНДС   = Цена * ((100 + ВыборкаТЧ.СтавкаНДС)/100);
		ЦенаБезНДС = Цена;
	КонецЕсли;
	
	// Обратная (от цены с НДС)
	Если СхемаПодсчетаОбратная = Истина Тогда 
		СуммаСНДС   = ЦенаСНДС * НовСтр.Количество; 
		СуммаНДС    = Окр(СуммаСНДС / (100 + ВыборкаТЧ.СтавкаНДС) * ВыборкаТЧ.СтавкаНДС, 4);
		СуммаБезНДС = СуммаСНДС - СуммаНДС;
		
	// Прямая (от цены без НДС)
	Иначе	
		СуммаБезНДС = ЦенаБезНДС * НовСтр.Количество;
		СуммаСНДС   = СуммаБезНДС * (100 + ВыборкаТЧ.СтавкаНДС)/100;
		СуммаНДС    = Окр(СуммаСНДС - СуммаБезНДС, 4);
		
	КонецЕсли;

    НовСтр.СуммаНДС     = СуммаНДС;
	НовСтр.Цена         = Цена;
	НовСтр.Сумма        = Цена * НовСтр.Количество;			
КонецЦикла;

Если Приемник.Товары.Количество() = 0 Тогда
	ТекстЛогаСобытий = ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) +
	" не создан, т.к. не заполнены товары, возможно документ был сформирован вручную, проверьте поступление к этому заказу.";
	ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);			
Иначе
	
	ДокументЗаписан = Ложь;
	Попытка
	    Приемник.Записать(?(ЭКОМ_СоздаватьДокументЗаказ1СПроведенным, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
	    ДокументЗаписан = Истина;	
	Исключение
	    Приемник.Записать(РежимЗаписиДокумента.Запись);
	    ТекстЛогаСобытий = ИмяДокументаПрименика + " по документу " + Строка(Источник.Ссылка) + " не создан!!! " + СокрЛП(ОписаниеОшибки());
		ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		ДокументЗаписан = Истина;
	КонецПопытки;
	
	Если ДокументЗаписан Тогда
		
		// Документ привязываем к ЭКОМ документу
		Отбор = Новый Структура();
        Отбор.Вставить("ДокументСвязанный", Приемник.Ссылка);
        НайденныеСтроки = Источник.ДокументыСвязанные.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() = 0 Тогда
			ИсточникОбъект = Источник.ПолучитьОбъект();
			НовДок = ИсточникОбъект.ДокументыСвязанные.Добавить();
			НовДок.ДокументСвязанный = Приемник.Ссылка;
			ИсточникОбъект.НеВыполнятьКодПриЗаписи = Истина;
			ИсточникОбъект.Записать();
		КонецЕсли;
		
   		ВидНомерЗаказа = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("НомерЗаказа", Истина);
		Если ВидНомерЗаказа.Пустая() Тогда
						
			ЭлПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
			ЭлПВХ.Наименование = "НомерЗаказа";
			ЭлПВХ.Заголовок    = "НомерЗаказа";
			ЭлПВХ.Имя          = "НомерЗаказа";
			ЭлПВХ.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_СчетНаОплатуПокупателю;
			ЭлПВХ.ТипЗначения  = Новый ОписаниеТипов("Строка");
			ЭлПВХ.Записать();
			
			ВидНомерЗаказа =  ЭлПВХ.Ссылка;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи(); 
		МЗ.Объект   = Приемник.Ссылка;
		МЗ.Свойство = ВидНомерЗаказа;
		
		МЗ.Прочитать();
		МЗ.Объект   = Приемник.Ссылка;
		МЗ.Свойство = ВидНомерЗаказа;
		МЗ.Значение = ORDERNUMBER;
        МЗ.Записать();
		
		ВидДатаЗаказа = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("ДатаЗаказа", Истина);
		Если ВидДатаЗаказа.Пустая() Тогда
						
			ЭлПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
			ЭлПВХ.Наименование = "ДатаЗаказа";
			ЭлПВХ.Заголовок    = "ДатаЗаказа";
			ЭлПВХ.Имя          = "ДатаЗаказа";
			ЭлПВХ.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_СчетНаОплатуПокупателю;
			ЭлПВХ.ТипЗначения  = Новый ОписаниеТипов("Дата");
			ЭлПВХ.Записать();
			
			ВидДатаЗаказа =  ЭлПВХ.Ссылка;
		КонецЕсли;
		
		МЗ = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи(); 
		МЗ.Объект   = Приемник.Ссылка;
		МЗ.Свойство = ВидДатаЗаказа;
		
		МЗ.Прочитать();
		МЗ.Объект   = Приемник.Ссылка;
		МЗ.Свойство = ВидДатаЗаказа;
		МЗ.Значение = ORDERDATE;
        МЗ.Записать();
        
        Приемник.Записать();

	КонецЕсли;	
	
КонецЕсли;

</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">ЭКОМ_Документ_ORDER</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">3</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать заказ клиента</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
		</Value>
	</row>
</ValueTree>