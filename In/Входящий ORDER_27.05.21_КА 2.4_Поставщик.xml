<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий ORDER</Value>
		<Value xsi:type="xs:string">//ВыполнитьГибкиеНастройки(Приемник,,, ЛогСобытий); 

// Новый вариант для использования при создании ЭКОМ_Документа
Если Приемник.xmlВалюта = "UAH" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(980);
ИначеЕсли Приемник.xmlВалюта = "RUB" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
ИначеЕсли Приемник.xmlВалюта = "USD" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(840);
ИначеЕсли Приемник.xmlВалюта = "EUR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(978);
ИначеЕсли Приемник.xmlВалюта = "MDL" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(498);
ИначеЕсли Приемник.xmlВалюта = "BYR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(974);
ИначеЕсли Приемник.xmlВалюта = "KZT" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(398);
Иначе
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
КонецЕсли;

Приемник.Валюта = Валюта;

Если ВРег(Приемник.ТипДокумента) = "D" Тогда

    Если ЗначениеЗаполнено(Приемник.Документ1С) И ТипЗнч(Приемник.Документ1С) = Тип("ДокументСсылка.ЗаказКлиента")
        И НЕ Приемник.Документ1С.Проведен Тогда

        ЗаказОбъект = Приемник.Документ1С.ПолучитьОбъект();
        ЗаказОбъект.УстановитьПометкуУдаления(Истина);
    КонецЕсли;

ИначеЕсли  ВРег(Приемник.ТипДокумента) = "R" Тогда

    Если ЗначениеЗаполнено(Приемник.Документ1С)
        И НЕ Приемник.Документ1С.Проведен Тогда

        ДокументОбъект = Приемник.Документ1С.ПолучитьОбъект();

        ДокументОбъект.Товары.Очистить();
        Для Каждого СтрокаТЧ Из Приемник.ТЧ_Товары Цикл
            ТекущаяСтрока = ДокументОбъект.Товары.Добавить();

            ТекущаяСтрока.КоличествоУпаковок    = СтрокаТЧ.КоличествоЗаказанное;
            ТекущаяСтрока.Количество            = СтрокаТЧ.КоличествоЗаказанное;
            Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда

                ТекущаяСтрока.Номенклатура            = СтрокаТЧ.Номенклатура;

                //Получение цены
                //Получим значение настройки ЦеныИз1С для контрагента 
                ЗапросЦеныИз1С = РегистрыСведений.ЭКОМ_GLN.СоздатьМенеджерЗаписи();
                ЗапросЦеныИз1С.Объект = ДокументОбъект.Контрагент;
                ЗапросЦеныИз1С.Прочитать();
                ЦеныИз1С = ЗапросЦеныИз1С.Контрагент_ЦеныИз1С;

                Цена = 0;
                Если ЦеныИз1С Тогда 
                    ЗапросЦены = Новый Запрос;
                    ЗапросЦены.Текст = 
                    "ВЫБРАТЬ
                    |    ЕСТЬNULL(СоглашенияСКлиентом.Номенклатура, ЦеныНоменклатуры.Номенклатура) КАК Номенклатура,
                    |    ЕСТЬNULL(СоглашенияСКлиентом.Цена, ЦеныНоменклатуры.Цена) КАК Цена
                    |ИЗ
                    |    (ВЫБРАТЬ
                    |        ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
                    |        ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
                    |        ЦеныНоменклатурыСрезПоследних.Упаковка КАК Упаковка,
                    |        ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
                    |    ИЗ
                    |        РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&amp;ДатаЗаказа, ВидЦены = &amp;ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
                    |    ГДЕ
                    |        ЦеныНоменклатурыСрезПоследних.Номенклатура = &amp;Номенклатура) КАК ЦеныНоменклатуры
                    |        ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                    |            СоглашенияСКлиентамиТовары.Номенклатура КАК Номенклатура,
                    |            СоглашенияСКлиентамиТовары.Характеристика КАК Характеристика,
                    |            СоглашенияСКлиентамиТовары.Упаковка КАК Упаковка,
                    |            СоглашенияСКлиентамиТовары.Цена КАК Цена
                    |        ИЗ
                    |            Справочник.СоглашенияСКлиентами.Товары КАК СоглашенияСКлиентамиТовары
                    |        ГДЕ
                    |            СоглашенияСКлиентамиТовары.Ссылка = &amp;СоглашенияСКлиентами
                    |            И СоглашенияСКлиентамиТовары.Номенклатура = &amp;Номенклатура) КАК СоглашенияСКлиентом
                    |        ПО (СоглашенияСКлиентом.Номенклатура = ЦеныНоменклатуры.Номенклатура)
                    |            И (ЦеныНоменклатуры.Характеристика = СоглашенияСКлиентом.Характеристика)
                    |            И (ЦеныНоменклатуры.Упаковка = СоглашенияСКлиентом.Упаковка)";

                    ЗапросЦены.УстановитьПараметр("СоглашенияСКлиентами", ДокументОбъект.Соглашение);
                    ЗапросЦены.УстановитьПараметр("ВидЦены"                , ДокументОбъект.Соглашение.ВидЦен);
                    ЗапросЦены.УстановитьПараметр("ДатаЗаказа"            , Приемник.ЗаказДата);
                    ЗапросЦены.УстановитьПараметр("Номенклатура"        , СтрокаТЧ.Номенклатура);

                    РезультатЗапроса = ЗапросЦены.Выполнить();

                    ВыборкаЦены = РезультатЗапроса.Выбрать();

                    Пока ВыборкаЦены.Следующий() Цикл
                        Цена = ВыборкаЦены.Цена;
                    КонецЦикла;

                    Если Цена = 0 ИЛИ Цена = NULL Тогда
                        Цена = СтрокаТЧ.ЦенаСНДС;
                    КонецЕсли;
                Иначе
                    Цена = СтрокаТЧ.ЦенаСНДС;
                КонецЕсли;

                ТекущаяСтрока.Цена    = Цена;

                Если НЕ СтрокаТЧ.СтавкаНДС = 0 Тогда
                    СтавкаНДС = СтавкаНДССсылка(СтрокаТЧ.СтавкаНДС);
                Иначе
                    СтавкаНДС = СтрокаТЧ.Номенклатура.СтавкаНДС;
                КонецЕсли;

                ТекущаяСтрока.СтавкаНДС    = СтавкаНДС; 

				Если ТипЗнч(Приемник.Документ1С) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
	                ТекущаяСтрока.ДатаОтгрузки = ДокументОбъект.ЖелаемаяДатаОтгрузки;
	                ТекущаяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;
				КонецЕсли;
				
                ТекущаяСтрока.Склад = ДокументОбъект.Склад;

                //Пока ставим вид цены Произвольный
                ТекущаяСтрока.ВидЦены = Справочники.ВидыЦен.ПустаяСсылка();

                СтавкаНДС = СтавкаНДСЧислом(ТекущаяСтрока.СтавкаНДС)/100;

                Если ДокументОбъект.ЦенаВключаетНДС Тогда
                    СуммаСНДС = ТекущаяСтрока.Цена * ТекущаяСтрока.КоличествоУпаковок;
                    СуммаБезНДС = СуммаСНДС/ (1 + СтавкаНДС);
                    ТекущаяСтрока.СуммаНДС = СуммаБезНДС * СтавкаНДС;    
                    ТекущаяСтрока.Сумма = СуммаСНДС;
                    ТекущаяСтрока.СуммаСНДС = СуммаСНДС;
                Иначе
                    ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.Цена * ТекущаяСтрока.КоличествоУпаковок * СтавкаНДС;
                    ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.КоличествоУпаковок;
                    ТекущаяСтрока.СуммаСНДС = ТекущаяСтрока.Сумма + ТекущаяСтрока.СуммаНДС;
                КонецЕсли;
            КонецЕсли;    
        КонецЦикла;    

        ДокументОбъект.Записать(?(ДокументОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));

    КонецЕсли;    

КонецЕсли;

Если Приемник.НеЗагружатьДокумент = Ложь Тогда
	Приемник.Проведен = Истина;
	Приемник.ПометкаУдаления = Ложь;
КонецЕсли;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Заказы покупателей (ORDER)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">3</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Заказы покупателей (ORDER)</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
		</Value>
	</row>
</ValueTree>