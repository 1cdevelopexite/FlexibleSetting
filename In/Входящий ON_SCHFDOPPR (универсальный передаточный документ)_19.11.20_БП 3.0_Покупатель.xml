<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий ON_SCHFDOPPR (универсальный передаточный документ)</Value>
		<Value xsi:type="xs:string">  ЛогСобытий = "";
  
  Если ТипЗнч(Приемник) = Тип("ДокументСсылка.ЭКОМ_Документы")  Тогда
	  Приемник = Приемник.ПолучитьОбъект();
  КонецЕсли;
  
  Приемник.Записать();
  
  // Поиск контрагента
  Если НЕ ЗначениеЗаполнено(Приемник.Контрагент) Тогда
	  
	  ИНН = "";
	  КПП = "";
	  Идентификатор = "";
	  НайденныйКонтрагент = Неопределено;
	  
	  Если СтруктураДокумента.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_KORSCHFDOPPR_01 
		  ИЛИ СтруктураДокумента.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_KORSCHFDOPPR_01_Испр
		  ИЛИ СтруктураДокумента.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_SCHFDOPPR_01 
		  ИЛИ СтруктураДокумента.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_SCHFDOPPR_01_Испр Тогда
		  
		  СтруктураДокумента.Свойство("ИдОтпр", Идентификатор);
		  
		  СтруктураДокумента.Свойство("Продавец_ИННЮЛ"	, ИНН);
		  СтруктураДокумента.Свойство("Продавец_КПП"		, КПП);
		  
		  Если НЕ ЗначениеЗаполнено(ИНН) Тогда
			  СтруктураДокумента.Свойство("Продавец_ИННФЛ", ИНН);
		  КонецЕсли;										
		  
	  ИначеЕсли СтруктураДокумента.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_NSCHFDOPPR_01 
		  ИЛИ СтруктураДокумента.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_NSCHFDOPPR_01_Испр Тогда
		  
		  СтруктураДокумента.Свойство("СвУчДокОбор_ИдОтпр", Идентификатор);
		  
		  СтруктураДокумента.Свойство("Документ_СвСчФакт_СвПрод_ИдСв_СвЮЛУч_ИННЮЛ"	, ИНН);
		  СтруктураДокумента.Свойство("Документ_СвСчФакт_СвПрод_ИдСв_СвЮЛУч_КПП"		, КПП);
		  
		  Если НЕ ЗначениеЗаполнено(ИНН) Тогда
			  СтруктураДокумента.Свойство("Документ_СвСчФакт_СвПрод_ИдСв_СвИП_ИННФЛ", ИНН);
		  КонецЕсли;	
		  
	  КонецЕсли;
	  
	  Если ЗначениеЗаполнено(ИНН) Тогда
		  Запрос = Новый Запрос;
		  Запрос.Текст = 
		  "ВЫБРАТЬ
		  |	Контрагенты.Ссылка КАК Ссылка
		  |ИЗ
		  |	Справочник.Контрагенты КАК Контрагенты
		  |ГДЕ
		  |	Контрагенты.ИНН = &amp;ИНН
		  |	И Контрагенты.КПП = &amp;КПП";
		  
		  Если НЕ ЗначениеЗаполнено(КПП) Тогда
			  Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Контрагенты.КПП = &amp;КПП", "");
		  КонецЕсли;
		  
		  Запрос.УстановитьПараметр("ИНН", ИНН);
		  Запрос.УстановитьПараметр("КПП", КПП);
		  
		  РезультатЗапроса = Запрос.Выполнить();
		  Если НЕ РезультатЗапроса.Пустой() Тогда
			  ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			  Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
				  ВыборкаДетальныеЗаписи.Следующий();
				  НайденныйКонтрагент = ВыборкаДетальныеЗаписи.Ссылка;
			  КонецЕсли;
		  КонецЕсли;													
	  КонецЕсли;
	  
	  Если ЗначениеЗаполнено(НайденныйКонтрагент)  Тогда
		  
		  Запрос = Новый Запрос;
		  Запрос.Текст = 
		  "ВЫБРАТЬ
		  |	ЭКОМ_ОператорыЭДО.Ссылка КАК Ссылка
		  |ИЗ
		  |	Справочник.ЭКОМ_ОператорыЭДО КАК ЭКОМ_ОператорыЭДО
		  |ГДЕ
		  |	ЭКОМ_ОператорыЭДО.Идентификатор = &amp;Идентификатор";
		  
		  Запрос.УстановитьПараметр("Идентификатор", Лев(Идентификатор, 3));
		  
		  Оператор = Неопределено;
		  РезультатЗапроса = Запрос.Выполнить();
		  Если НЕ РезультатЗапроса.Пустой() Тогда
			  ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			  ВыборкаДетальныеЗаписи.Следующий();
			  Оператор = ВыборкаДетальныеЗаписи.Ссылка;
		  КонецЕсли;
		  
		  Если ЗначениеЗаполнено(Оператор) Тогда
			  
			  Приемник.Контрагент = НайденныйКонтрагент;
			  
			  // Запишем в регистр GLN
			  МенеджерЗаписи = РегистрыСведений.ЭКОМ_GLN.СоздатьМенеджерЗаписи();
			  МенеджерЗаписи.Объект = НайденныйКонтрагент;	
			  МенеджерЗаписи.Прочитать();
			  
			  Если НЕ МенеджерЗаписи.Выбран() Тогда // Если запись не существует то записать	
				  МенеджерЗаписи.Объект  = НайденныйКонтрагент;
				  МенеджерЗаписи.Ид_ОЭД  = Сред(Идентификатор, 4);
				  МенеджерЗаписи.Партнер = Оператор;
				  МенеджерЗаписи.Записать();
			  КонецЕсли;
			  
		  КонецЕсли;
		  
	  КонецЕсли;
	  
  КонецЕсли;
  
  МассивКонтрагентов = Новый Массив;
  МассивКонтрагентов.Добавить(Приемник.Контрагент); 
  
  ТекстУточнения = "";	 
  ПредстДокЭКОМ = "ЭКОМ док № " + СокрЛП(Приемник.Номер) + " от " + Формат(Приемник.Дата, "ДФ=dd.MM.yyyy");
  
  НайденоПоступление = Ложь;
  НайденаСчетФактура = Ложь;
  ДокПН      = Неопределено;
  ДокСчФ     = Неопределено;
  
  // Ищем поступление
  Запрос = Новый Запрос;
  Запрос.Текст = 
  "ВЫБРАТЬ
  |	ВЫБОР
  |		КОГДА НЕ ПоступлениеТоваровУслугПоНомеру.Ссылка ЕСТЬ NULL
  |			ТОГДА ПоступлениеТоваровУслугПоНомеру.Ссылка
  |		КОГДА НЕ ПоступлениеТоваровУслугНомВхДок.Ссылка ЕСТЬ NULL
  |			ТОГДА ПоступлениеТоваровУслугНомВхДок.Ссылка
  |		КОГДА НЕ ПриходнаяНакладнаяНомерСЧФ.Ссылка ЕСТЬ NULL
  |			ТОГДА ПриходнаяНакладнаяНомерСЧФ.Ссылка
  |		КОГДА НЕ СчетФактураПолученныйПоНомеруУПД.ДокументОснование ЕСТЬ NULL
  |			ТОГДА ВЫРАЗИТЬ(СчетФактураПолученныйПоНомеруУПД.ДокументОснование КАК Документ.ПоступлениеТоваровУслуг)
  |		КОГДА НЕ ПоступлениеТоваровУслуг1.Ссылка ЕСТЬ NULL
  |			ТОГДА ПоступлениеТоваровУслуг1.Ссылка
  |		ИНАЧЕ НЕОПРЕДЕЛЕНО
  |	КОНЕЦ КАК ПН,
  |	ВЫБОР
  |		КОГДА НЕ СчетФактураПолученныйПоНомеру.Ссылка ЕСТЬ NULL
  |			ТОГДА СчетФактураПолученныйПоНомеру.Ссылка
  |		КОГДА НЕ СчетФактураПолученныйНомВхДок.Ссылка ЕСТЬ NULL
  |			ТОГДА СчетФактураПолученныйНомВхДок.Ссылка
  |		КОГДА НЕ СчетФактураПолученныйНомерСЧФ.Ссылка ЕСТЬ NULL
  |			ТОГДА СчетФактураПолученныйНомерСЧФ.Ссылка
  |		КОГДА НЕ СчетФактураПолученныйПоНомеруУПД.Ссылка ЕСТЬ NULL
  |			ТОГДА СчетФактураПолученныйПоНомеруУПД.Ссылка
  |		КОГДА НЕ СчетФактураПолученный1.Ссылка ЕСТЬ NULL
  |			ТОГДА СчетФактураПолученный1.Ссылка
  |		ИНАЧЕ НЕОПРЕДЕЛЕНО
  |	КОНЕЦ КАК Счф
  |ИЗ
  |	Документ.ЭКОМ_Документы КАК ЭКОМ_ДокументыЮЗД
  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслугНомВхДок
  |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйНомВхДок
  |			ПО ПоступлениеТоваровУслугНомВхДок.Ссылка = СчетФактураПолученныйНомВхДок.ДокументОснование
  |		ПО (НЕ ПоступлениеТоваровУслугНомВхДок.ПометкаУдаления)
  |			И (ПоступлениеТоваровУслугНомВхДок.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, 3))
  |			И (ПоступлениеТоваровУслугНомВхДок.Контрагент В (&amp;МассивКонтрагентов))
  |			И (ПоступлениеТоваровУслугНомВхДок.Организация = ЭКОМ_ДокументыЮЗД.Организация)
  |			И (ПоступлениеТоваровУслугНомВхДок.Проведен)
  |			И (ПоступлениеТоваровУслугНомВхДок.Контрагент В (&amp;МассивКонтрагентов))
  |			И (ПОДСТРОКА(ПоступлениеТоваровУслугНомВхДок.НомерВходящегоДокумента, 1, 100) = ЭКОМ_ДокументыЮЗД.НакладнаяНомер)
  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслугПоНомеру
  |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйПоНомеру
  |			ПО ПоступлениеТоваровУслугПоНомеру.Ссылка = СчетФактураПолученныйПоНомеру.ДокументОснование
  |		ПО (НЕ ПоступлениеТоваровУслугПоНомеру.ПометкаУдаления)
  |			И (ПоступлениеТоваровУслугПоНомеру.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, 3))
  |			И (ПоступлениеТоваровУслугПоНомеру.Контрагент В (&amp;МассивКонтрагентов))
  |			И (ПоступлениеТоваровУслугПоНомеру.Организация = ЭКОМ_ДокументыЮЗД.Организация)
  |			И (ПОДСТРОКА(ПоступлениеТоваровУслугПоНомеру.Номер, 1, 100) = ЭКОМ_ДокументыЮЗД.НакладнаяНомер)
  |			И (ПоступлениеТоваровУслугПоНомеру.Проведен)
  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПриходнаяНакладнаяНомерСЧФ
  |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйНомерСЧФ
  |			ПО ПриходнаяНакладнаяНомерСЧФ.Ссылка = СчетФактураПолученныйНомерСЧФ.ДокументОснование
  |		ПО (НЕ ПриходнаяНакладнаяНомерСЧФ.ПометкаУдаления)
  |			И (ПриходнаяНакладнаяНомерСЧФ.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, 3))
  |			И (ПриходнаяНакладнаяНомерСЧФ.Контрагент В (&amp;МассивКонтрагентов))
  |			И (ПриходнаяНакладнаяНомерСЧФ.Организация = ЭКОМ_ДокументыЮЗД.Организация)
  |			И (ПриходнаяНакладнаяНомерСЧФ.Проведен)
  |			И (ПОДСТРОКА(ПриходнаяНакладнаяНомерСЧФ.НомерВходящегоДокумента, 1, 100) = ЭКОМ_ДокументыЮЗД.СЧФНомер)
  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйПоНомеруУПД
  |		ПО (ЭКОМ_ДокументыЮЗД.СЧФНомер = ПОДСТРОКА(СчетФактураПолученныйПоНомеруУПД.НомерВходящегоДокумента, 1, 100))
  |			И (СчетФактураПолученныйПоНомеруУПД.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.НакладнаяДата, ДЕНЬ, 3))
  |			И (СчетФактураПолученныйПоНомеруУПД.Контрагент В (&amp;МассивКонтрагентов))
  |			И ЭКОМ_ДокументыЮЗД.Организация = СчетФактураПолученныйПоНомеруУПД.Организация
  |			И (НЕ СчетФактураПолученныйПоНомеруУПД.ПометкаУдаления)
  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭКОМ_Документы.ДокументыСвязанные КАК ЭКОМ_ДокументыДокументыСвязанные_DESADV
  |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг_ПоЗаказу
  |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный_ПоЗаказу
  |				ПО ПоступлениеТоваровУслуг_ПоЗаказу.Ссылка = СчетФактураПолученный_ПоЗаказу.ДокументОснование
  |			ПО ЭКОМ_ДокументыДокументыСвязанные_DESADV.ДокументСвязанный = ПоступлениеТоваровУслуг_ПоЗаказу.Ссылка
  |				И (НЕ ПоступлениеТоваровУслуг_ПоЗаказу.Ссылка.ПометкаУдаления)
  |		ПО ЭКОМ_ДокументыЮЗД.ЗаказНомер = ЭКОМ_ДокументыДокументыСвязанные_DESADV.Ссылка.ЗаказНомер
  |			И (НАЧАЛОПЕРИОДА(ЭКОМ_ДокументыДокументыСвязанные_DESADV.Ссылка.ЗаказДата, ДЕНЬ) МЕЖДУ ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.СЧФДата, ДЕНЬ, -15) И ДОБАВИТЬКДАТЕ(ЭКОМ_ДокументыЮЗД.СЧФДата, ДЕНЬ, 15))
  |			И (ЭКОМ_ДокументыДокументыСвязанные_DESADV.Ссылка.Контрагент В (&amp;МассивКонтрагентов))
  |			И ЭКОМ_ДокументыЮЗД.Организация = ЭКОМ_ДокументыДокументыСвязанные_DESADV.Ссылка.Организация
  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщикаЗаказ1
  |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг1
  |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный1
  |				ПО ПоступлениеТоваровУслуг1.Ссылка = СчетФактураПолученный1.ДокументОснование
  |			ПО СчетНаОплатуПоставщикаЗаказ1.Ссылка = ПоступлениеТоваровУслуг1.СчетНаОплатуПоставщика
  |		ПО ЭКОМ_ДокументыЮЗД.ЗаказНомер = СчетНаОплатуПоставщикаЗаказ1.Номер
  |			И (НАЧАЛОПЕРИОДА(ЭКОМ_ДокументыЮЗД.ЗаказДата, ДЕНЬ) = НАЧАЛОПЕРИОДА(СчетНаОплатуПоставщикаЗаказ1.Дата, ДЕНЬ))
  |ГДЕ
  |	ЭКОМ_ДокументыЮЗД.Ссылка = &amp;Приемник";
  
  Запрос.УстановитьПараметр("Приемник"               , Приемник.Ссылка);
  Запрос.УстановитьПараметр("МассивКонтрагентов"     , МассивКонтрагентов);
  
  Результат = Запрос.Выполнить();                  
  Если НЕ Результат.Пустой() Тогда
	  Выборка = Результат.Выбрать();	
	  Выборка.Следующий();
	  
	  Если ЗначениеЗаполнено(Выборка.ПН) Тогда
		  НайденоПоступление = Истина;
		  ДокПН  = Выборка.ПН;
	  КонецЕсли;
	  
	  
	  Если ЗначениеЗаполнено(Выборка.СЧФ) Тогда
		  НайденаСчетФактура = Истина;
		  ДокСчФ = Выборка.СЧФ;
	  КонецЕсли;
	  
  КонецЕсли;
  
  Если НайденаСчетФактура = Истина Тогда 
	  // Сравниваем суммы из XML(ЭКОМ док) и документа 1С
	  //		 ПредставлениеДокСчФ = "Счет-фактура № " + СокрЛП(ДокСчФ.Номер) + " от " + Формат(ДокСчФ.Дата, "ДФ=dd.MM.yyyy");
	  //		 ЛогСобытий = ЛогСобытий + Символы.ПС + "Найден документ " + ПредставлениеДокСчФ + " по " + ПредстДокЭКОМ;
	  //		 
	  //		 РасхождениеПоСумме_с_НДС = (ДокПН.СуммаДокумента - Приемник.СуммаДокументаВсего);
	  //		 РасхождениеПоСумме_с_НДС = ?(РасхождениеПоСумме_с_НДС &gt; 0   , РасхождениеПоСумме_с_НДС, - РасхождениеПоСумме_с_НДС);
	  //		 ЕстьРасхождениеПоСумме_с_НДС = ?(РасхождениеПоСумме_с_НДС &gt; 0.05, Истина, Ложь);
	  //		 
	  //		 ЭКОМСуммаБезНДС = 0;
	  //		 ЭКОМСуммаНДС = 0;
	  //		 Для каждого Стр Из Приемник.ТЧ_Товары Цикл
	  //			 ЭКОМСуммаБезНДС = ЭКОМСуммаБезНДС + Стр.Сумма;
	  //			 ЭКОМСуммаНДС    = ЭКОМСуммаНДС    + Стр.СуммаНДС;
	  //		 КонецЦикла;
	  //		 
	  //		 СуммаНДСДокумента = 0;
	  //		 Для каждого Стр Из ДокПН.Товары Цикл
	  //			 СуммаНДСДокумента = СуммаНДСДокумента + Стр.СуммаНДС;
	  //		 КонецЦикла;
	  //		 
	  //		 РасхождениеПоСуммеНДС = (СуммаНДСДокумента - ЭКОМСуммаНДС);
	  //		 РасхождениеПоСуммеНДС = ?(РасхождениеПоСуммеНДС &gt; 0   , РасхождениеПоСуммеНДС, - РасхождениеПоСуммеНДС);
	  //		 ЕстьРасхождениеПоСуммеНДС = ?(РасхождениеПоСуммеНДС &gt; 0.05, Истина, Ложь);
	  //		 
	  //		 СуммаБезНДС = ДокПН.СуммаДокумента - СуммаНДСДокумента;
	  //		 РасхождениеПоСуммеБезНДС = (СуммаБезНДС - ЭКОМСуммаБезНДС);
	  //		 РасхождениеПоСуммеБезНДС = ?(РасхождениеПоСуммеБезНДС &gt; 0, РасхождениеПоСуммеБезНДС, - РасхождениеПоСуммеБезНДС);
	  //		 ЕстьРасхождениеПоСуммеБезНДС = ?(РасхождениеПоСуммеБезНДС &gt; 0.05, Истина, Ложь);
	  //		 
	  //		 Если ЕстьРасхождениеПоСумме_с_НДС 
	  //			 ИЛИ ЕстьРасхождениеПоСуммеНДС 
	  //			 ИЛИ ЕстьРасхождениеПоСуммеБезНДС Тогда  
	  //			 ТекстУточнения = "Проверьте суммы документов: " + 
	  //			 "Сумма Всего 1С " + ПредставлениеДокСчФ + " = " + ДокПН.СуммаДокумента + "; "
	  //			 "Сумма Всего УПД = " + Приемник.СуммаДокументаВсего + "; " +
	  //			 "Сумма без НДС 1С = " + СуммаБезНДС + "; " +
	  //			 "Сумма без НДС УПД =  " + ЭКОМСуммаБезНДС + "; " + 
	  //			 "Сумма НДС 1С = " + СуммаНДСДокумента + "; " +
	  //			 "Сумма НДС УПД =  " + ЭКОМСуммаНДС;
	  //			 Сообщить(ТекстУточнения, СтатусСообщения.Важное);  
	  //		 КонецЕсли;
	  
  ИначеЕсли НайденоПоступление = Истина Тогда
	  
	  ДокСчФ = УчетНДСПереопределяемый.НайтиПодчиненныйСчетФактуруПолученный(ДокПН.Ссылка);
	  
	  Если НЕ ЗначениеЗаполнено(ДокСчФ) Тогда		 
		  
		  ДокСчФ = Документы.СчетФактураПолученный.СоздатьДокумент();
		  ДокСчФ.Заполнить(ДокПН);	 
		  ЭКОМ_СоздаватьДокументРеализация1СПроведенным = Настройка_Параметр_Прочитать("ЭКОМ_СоздаватьДокументРеализация1СПроведенным");
		  
		  // Запишем документ в базу 
		  Попытка
			  ДокСчФ.ДатаВходящегоДокумента  = Приемник.СЧФДата;
			  ДокСчФ.НомерВходящегоДокумента = Приемник.СЧФНомер;
			  ДокСчФ.Записать(?(ЭКОМ_СоздаватьДокументРеализация1СПроведенным, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			  
			  Сообщить("Счет-фактура по поступлению № " + ДокПН.Номер + " создана! Номер СЧФ № " + ДокСчФ.Номер);
			  НайденаСчетФактура = Истина;
		  Исключение
			  ДокСчФ.Записать(РежимЗаписиДокумента.Запись);
			  Сообщить("Счет-фактура по поступлению № " + ДокПН.Номер + " не создано!!! " + СокрЛП(ОписаниеОшибки()));
			  НайденаСчетФактура = Истина;
		  КонецПопытки;
		  
	  КонецЕсли;	 
	  
  Иначе
	  ЛогСобытий = ЛогСобытий + Символы.ПС + "Приходная накладная по УПД не найдена № " + Приемник.НакладнаяНомер + " от " + Приемник.НакладнаяДата;
  КонецЕсли;
  
  Если НайденаСчетФактура = Истина 
	  И НайденоПоступление = Истина Тогда
	  ДокСчФОбъект = ДокСчФ.Ссылка.ПолучитьОбъект();
	  ДокСчФОбъект.ДатаВходящегоДокумента  = Приемник.СЧФДата;
	  ДокСчФОбъект.НомерВходящегоДокумента = Приемник.СЧФНомер;
	  ДокСчФОбъект.Записать();
	  
	  Приемник.ДокументыСвязанные.Очистить();
	  НовСтр = Приемник.ДокументыСвязанные.Добавить();
	  НовСтр.ДокументСвязанный = ДокПН.Ссылка;
	  
	  Приемник.Документ1С = ДокСчФ.Ссылка;		 
	  Приемник.Записать(РежимЗаписиДокумента.Проведение); 
	  
  Иначе
	  
	  Приемник.Записать(РежимЗаписиДокумента.Запись);
	  
  КонецЕсли;
  
  Если ЗначениеЗаполнено(ТекстУточнения) Тогда
	  Приемник.Комментарий = ТекстУточнения;
  КонецЕсли;
  
  
  
  
  
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">ЮЗД (УПД / УКД / иУПД)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>