<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий ORDER</Value>
		<Value xsi:type="xs:string">//ВыполнитьГибкиеНастройки(Приемник,,, ЛогСобытий); 

ИмяЗаказа1С = "ДокументСсылка.СчетНаОплатуПокупателю";
ИмяРеализации1С = "ДокументСсылка.РеализацияТоваровУслуг";

// Новый вариант для использования при создании ЭКОМ_Документа
Если Приемник.xmlВалюта = "UAH" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(980);
ИначеЕсли Приемник.xmlВалюта = "RUB" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(643);
ИначеЕсли Приемник.xmlВалюта = "USD" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(840);
ИначеЕсли Приемник.xmlВалюта = "EUR" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(978);
ИначеЕсли Приемник.xmlВалюта = "MDL" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(498);
ИначеЕсли Приемник.xmlВалюта = "BYR" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(974);
ИначеЕсли Приемник.xmlВалюта = "KZT" Тогда
	Валюта = Справочники.Валюты.НайтиПоКоду(398);
Иначе
	Валюта = Справочники.Валюты.НайтиПоКоду(643);
КонецЕсли;

Приемник.Валюта = Валюта;

Если ВРег(Приемник.ТипДокумента) = "D" Тогда
	Для каждого СтрДокумент Из Приемник.ДокументыСвязанные Цикл
		Если ЗначениеЗаполнено(СтрДокумент.ДокументСвязанный) 
			И (ТипЗнч(СтрДокумент.ДокументСвязанный) = Тип(ИмяЗаказа1С)
			ИЛИ ТипЗнч(СтрДокумент.ДокументСвязанный) = Тип(ИмяРеализации1С))
			И НЕ СтрДокумент.ДокументСвязанный.Проведен Тогда
			
			ДокументСвязанныйОбъект = СтрДокумент.ДокументСвязанный.ПолучитьОбъект();
			ДокументСвязанныйОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	КонецЦикла;
		
Иначе 

	ПерезаписыватьЗаказ = Настройка_Параметр_Прочитать("ЭКОМ_ПерезаписыватьЗаказ", Ложь);    
	Если Приемник.НеЗагружатьДокумент = Ложь И ПерезаписыватьЗаказ Тогда    
		//получение ссылки на текущий документ Заказ
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЭКОМ_ЦепочкиДокументовПоставщика.Заказ КАК Заказ,
		               |	ЭКОМ_ЦепочкиДокументовПоставщика.Накладная КАК Накладная
		               |ИЗ
		               |	РегистрСведений.ЭКОМ_ЦепочкиДокументовПоставщика КАК ЭКОМ_ЦепочкиДокументовПоставщика
		               |ГДЕ
		               |	ЭКОМ_ЦепочкиДокументовПоставщика.ORDERDATE = &amp;ORDERDATE
		               |	И ЭКОМ_ЦепочкиДокументовПоставщика.ORDERNUMBER = &amp;ORDERNUMBER
		               |	И ЭКОМ_ЦепочкиДокументовПоставщика.ТочкаДоставки = &amp;ТочкаДоставки
		               |	И ЭКОМ_ЦепочкиДокументовПоставщика.Организация = &amp;Организация";
		Запрос.УстановитьПараметр("ORDERDATE"	 , Приемник.ФайлДата);
		Запрос.УстановитьПараметр("ORDERNUMBER"  , Приемник.ФайлНомер);
		Запрос.УстановитьПараметр("ТочкаДоставки", Приемник.ТочкаДоставки);
		Запрос.УстановитьПараметр("Организация"	 , Приемник.Организация);
		
		ЗаказОбъект = Неопределено; 
		Выборка     = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 И Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Заказ) И Не ЗначениеЗаполнено(Выборка.Накладная) Тогда
			ЗаказОбъект = Выборка.Заказ.ПолучитьОбъект();   	
		КонецЕсли;  
		
		Если Не ЗаказОбъект = Неопределено Тогда  		
			// получение гибких настроек создания заказа
			ИмяКолонки = "";
			СтруктураФайлаДанных = Неопределено;
			
			ШаблоныСозданияДокументов = Настройка_Параметр_Прочитать("СтруктураФайлаXMLДокументы");
			СтрокиНастроекПоОтбору	  = ШаблоныСозданияДокументов.Строки.НайтиСтроки(Новый Структура("Использовать, Кнопка", Истина, "Создать заказ клиента"));
			Если СтрокиНастроекПоОтбору.Количество() Тогда
				// используется первый найденный шаблон с признаком "Использовать"
				СтруктураФайлаДанных = СтрокиНастроекПоОтбору[0];
				
				ЕстьКолонка = НЕ СтруктураФайлаДанных.Владелец().Колонки.Найти("КолонкаИсточника") = Неопределено;
				Если ЕстьКолонка Тогда
					ИмяКолонки = СтруктураФайлаДанных.КолонкаИсточника;
				КонецЕсли;			
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтруктураФайлаДанных) Тогда
				// предварительная запись документа, для использования в запросах шаблона создания заказа
				Приемник.НеВыполнятьКодПриЗаписи = Истина;
				Приемник.Записать();    		
				Приемник.НеВыполнятьКодПриЗаписи = Ложь;
				
				// переменные используемые в шаблоне создания заказа клиента
				Источник = Приемник.Ссылка;
				Цепочка  = Новый Структура("ДокументЗаказа1С, ДокументРеализации", ЗаказОбъект.Ссылка, Документы.РеализацияТоваровУслуг.ПустаяСсылка());
				КэшированныеЗначения = Неопределено;
				
				// изменение имени переменной Приемник для исключения пересечений наименований текущего шаблона и вложенного 
				ГибкиеНастройки = СтрЗаменить(СтруктураФайлаДанных.Служебные, "Приемник", "ЗаказОбъект");
				// выполнение подготовленного шаблона
				Выполнить(ГибкиеНастройки);
				
				Приемник = Приемник.Ссылка.ПолучитьОбъект(); // актуализация ссылки на документ для корректной работы процедуры модуля СоздатьЭКОМ_ДокЗаказПокупателяORDER 
				
			КонецЕсли;  			
		КонецЕсли; // существует заказ в цепочке
			
	КонецЕсли;  // перезаписывать заказ	
КонецЕсли; // проверка типа документа
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Заказы покупателей (ORDER)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">3</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Заказы покупателей (ORDER)</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
		</Value>
	</row>
</ValueTree>