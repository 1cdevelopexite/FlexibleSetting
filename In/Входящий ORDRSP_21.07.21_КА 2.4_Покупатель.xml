<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий ORDRSP</Value>
		<Value xsi:type="xs:string">// Ищем валюту документа.
Если Приемник.xmlВалюта = "UAH" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(980);
ИначеЕсли Приемник.xmlВалюта = "RUB" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
ИначеЕсли Приемник.xmlВалюта = "USD" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(840);
ИначеЕсли Приемник.xmlВалюта = "EUR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(978);
ИначеЕсли Приемник.xmlВалюта = "MDL" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(498);
ИначеЕсли Приемник.xmlВалюта = "BYR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(974);
ИначеЕсли Приемник.xmlВалюта = "KZT" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(398);
Иначе
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
КонецЕсли;
Приемник.Валюта = Валюта;

// Заполняет табличную часть.
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
	|	ТЧ_Товары.НомерПродукта КАК НомерПродукта,
	|	ТЧ_Товары.xmlЕдиницаИзмерения КАК xmlЕдиницаИзмерения
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	&amp;ТЧ_Товары КАК ТЧ_Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.НомерПродукта КАК НомерПродукта,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияСсылка,
	|	ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК текстЕдиницаИзмерения1С,
	|	вт.xmlЕдиницаИзмерения КАК xmlЕдиницаИзмерения
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО вт.НомерПродукта = ШтрихкодыНоменклатуры.Штрихкод";
Запрос.УстановитьПараметр("ТЧ_Товары", Приемник.ТЧ_Товары.Выгрузить(,"НомерПродукта, xmlЕдиницаИзмерения"));

Результат = Запрос.Выполнить();
ТЗ = Результат.Выгрузить();
ТЗ.Индексы.Добавить("НомерПродукта");
ПометитьНаУдаление = Ложь;
ТекстКомментария = "";

Для Каждого Стр Из Приемник.ТЧ_Товары Цикл
    НайденнаяСтрока = ТЗ.Найти(Стр.НомерПродукта, "НомерПродукта");    
    Если НЕ НайденнаяСтрока = Неопределено Тогда  
        Стр.Номенклатура     = НайденнаяСтрока.Номенклатура;
        Стр.ЕдиницаИзмерения = НайденнаяСтрока.ЕдиницаИзмеренияСсылка;
        // Сравниваем единицы измерения
        Если НЕ СокрЛП(НайденнаяСтрока.текстЕдиницаИзмерения1С) = СокрЛП(НайденнаяСтрока.xmlЕдиницаИзмерения) Тогда
            ТекстКомментария = ТекстКомментария + ?(ЗначениеЗаполнено(ТекстКомментария), Символы.ПС, "")
            + "По штрихкоду " + НайденнаяСтрока.НомерПродукта + " ед. измерения из заказа - " + НайденнаяСтрока.текстЕдиницаИзмерения1С 
            + " не соответсвует ед. измерения XML документа - " + НайденнаяСтрока.xmlЕдиницаИзмерения;

            ПометитьНаУдаление = Истина;
        КонецЕсли;
    КонецЕсли;          
КонецЦикла;

// Меняем статус.
Если ПометитьНаУдаление = Ложь Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭКОМ_ЦепочкиДокументовПокупателя.Заказ КАК Заказ
		|ИЗ
		|	РегистрСведений.ЭКОМ_ЦепочкиДокументовПокупателя КАК ЭКОМ_ЦепочкиДокументовПокупателя
		|ГДЕ
		|	ЭКОМ_ЦепочкиДокументовПокупателя.ORDERNUMBER = &amp;ЗаказНомер
		|	И ЭКОМ_ЦепочкиДокументовПокупателя.ORDERDATE = &amp;ЗаказДата
		|	И ЭКОМ_ЦепочкиДокументовПокупателя.Контрагент = &amp;Контрагент
		|	И НЕ ЕСТЬNULL(ЭКОМ_ЦепочкиДокументовПокупателя.Заказ, ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|			И ТИПЗНАЧЕНИЯ(ЭКОМ_ЦепочкиДокументовПокупателя.Заказ) = ТИП(Документ.ЗаказПоставщику)";

	Запрос.УстановитьПараметр("ЗаказДата", 	Приемник.ЗаказДата);
	Запрос.УстановитьПараметр("ЗаказНомер", Приемник.ЗаказНомер);
	Запрос.УстановитьПараметр("Контрагент", Приемник.Контрагент);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ДокументЗаказа = ВыборкаДетальныеЗаписи.Заказ.ПолучитьОбъект();

	    Если Приемник.УточнениеОПоставке = "29"
			ИЛИ Приемник.УточнениеОПоставке = "4" Тогда // Поставка принята или изменена
	         ДокументЗаказа.Статус = Перечисления.СтатусыЗаказовПоставщикам.Подтвержден;
	    КонецЕсли;

	    Если ЗначениеЗаполнено(Приемник.ДатаПоставки) Тогда
	        ДатаПоступления = Приемник.ДатаПоставки;
	    Иначе
	        ДатаПоступления = ТекущаяДата();
	    КонецЕсли;

	    Если ДокументЗаказа.ПоступлениеОднойДатой Тогда
	        Если НЕ ЗначениеЗаполнено(ДокументЗаказа.ДатаПоступления) Тогда
	            ДокументЗаказа.ДатаПоступления = ДатаПоступления;
	        КонецЕсли;                 
	    КонецЕсли;
	    Для каждого Стр Из ДокументЗаказа.Товары Цикл
	        Если НЕ ЗначениеЗаполнено(Стр.ДатаПоступления) Тогда
	            Стр.ДатаПоступления = ДатаПоступления;
	        КонецЕсли;            
	    КонецЦикла;  

	    ДокументЗаказа.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецЕсли;

// Обрабатываем ACTION = 27.
Если СокрЛП(Приемник.УточнениеОПоставке) = "27" Тогда
	
	ИмяЦепочки = "ЭКОМ_ЦепочкиДокументовПокупателя";
	НаборЗаписей = РегистрыСведений[ИмяЦепочки].СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ORDERDATE.Установить(Приемник.ЗаказДата);
	НаборЗаписей.Отбор.Организация.Установить(Приемник.Организация);
	НаборЗаписей.Отбор.Контрагент.Установить(Приемник.Контрагент);
	НаборЗаписей.Отбор.ТочкаДоставки.Установить(Приемник.ТочкаДоставки);
	НаборЗаписей.Отбор.ORDERNUMBER.Установить(Приемник.ЗаказНомер);
	
	// Выполним блокировку данных
	НачатьТранзакцию();
	ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, ИмяЦепочки);		
	
	НаборЗаписей.Прочитать();
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		Если ЗначениеЗаполнено(НоваяЗапись.Заказ) И НЕ НоваяЗапись.Заказ.Проведен Тогда
			ЗаказОбъект = НоваяЗапись.Заказ.ПолучитьОбъект();
		    ЗаказОбъект.УстановитьПометкуУдаления(Истина);
			ПометитьНаУдаление = Истина;
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецЕсли;

Приемник.Комментарий = Приемник.Комментарий + ?(ЗначениеЗаполнено(Приемник.Комментарий), Символы.ПС, "") + ТекстКомментария;
Если Приемник.ЭтоПовторныйДокумент = Истина Тогда
	Если Приемник.НеЗагружатьДокумент = Истина Тогда
     	Приемник.Записать();
	КонецЕсли;
ИначеЕсли ПометитьНаУдаление = Истина Тогда
    // Удаляем.
    Приемник.ПометкаУдаления = Истина;
Иначе    
    // Проводим документ.
    Приемник.Проведен = Истина;
КонецЕсли;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Подтверждения заказов (ORDRSP)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>