<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Значение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий ON_SCHFDOPPR (универсальный передаточный документ)</Value>
		<Value xsi:nil="true"/>
		<Value xsi:nil="true"/>
		<Value xsi:nil="true"/>
		<Value xsi:nil="true"/>
		<Value xsi:nil="true"/>
		<Value xsi:nil="true"/>
		<Value xsi:type="xs:string"> 
 //Приемник = Документы.ЭКОМ_Документы.ПустаяСсылка();
 
 Если ТипЗнч(Приемник) = Тип("ДокументСсылка.ЭКОМ_Документы")  Тогда
	Приемник = Приемник.ПолучитьОбъект();
 КонецЕсли;

 Если СтруктураДокумента.ДокументТЧ.Количество() &gt; 0 Тогда
	 
	 
	 Если СтруктураДокумента.ДокументТЧ[0].Свойство("ИнфПолФХЖ2") Тогда

	 Если СтруктураДокумента.ДокументТЧ[0].ИнфПолФХЖ2.Свойство("номер_накладной") Тогда
		 Приемник.НакладнаяНомер = СтруктураДокумента.ДокументТЧ[0].ИнфПолФХЖ2.номер_накладной;
	 КонецЕсли;
	 
	 Если СтруктураДокумента.ДокументТЧ[0].ИнфПолФХЖ2.Свойство("дата_накладной") Тогда
		 Приемник.НакладнаяДата = ДатаИзXML_в_1С(СтруктураДокумента.ДокументТЧ[0].ИнфПолФХЖ2.дата_накладной);
	 КонецЕсли;
	 
     КонецЕсли;
 
 КонецЕсли;

 Приемник.Записать();
 
 МассивКонтрагентов = Новый Массив;
 МассивКонтрагентов.Добавить(Приемник.Контрагент); 
 
 Если Приемник.Контрагент.Код = "000092315" Тогда
	 КонтрагентВимБильДан = Справочники.Контрагенты.НайтиПоКоду("000092314");
	 МассивКонтрагентов.Добавить(КонтрагентВимБильДан);
 КонецЕсли;
	 
 ТекстУточнения = "";
 Если НЕ ЗначениеЗаполнено(Приемник.НакладнаяНомер) Тогда
	 ТекстУточнения = "В документе " + Приемник.ФайлНомер + " от " + Приемник.ФайлДата + "отсутствует &lt;&lt;&lt;номер накладной&gt;&gt;&gt;";
	 
	 Приемник.Комментарий = ТекстУточнения;
	 Приемник.Записать(РежимЗаписиДокумента.Запись);
	 
 Иначе
	 
	 ПредстДокЭКОМ = "ЭКОМ док № " + СокрЛП(Приемник.Номер) + " от " + Формат(Приемник.Дата, "ДФ=dd.MM.yyyy");
	 
	 ДокПН      = Неопределено;
	 ДокСчФ     = Неопределено;
	 //ДокКоррПН  = Неопределено;
	 //ДокКоррСчФ = Неопределено;
	 
	 // Ищем поступление
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ПОДСТРОКА(&amp;НомерВходящегоДокумента, 1, 100) КАК НомерВходящегоДокумента,
	 |	&amp;ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	 |	ВЫРАЗИТЬ(&amp;Организация КАК Справочник.Организации) КАК Организация,
	 |	ПОДСТРОКА(&amp;НомерСЧФ, 1, 100) КАК НомерСЧФ
	 |ПОМЕСТИТЬ XML_УПД
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВЫБОР
	 |		КОГДА НЕ ПоступлениеТоваровУслугПоНомеру.Ссылка ЕСТЬ NULL 
	 |			ТОГДА ПоступлениеТоваровУслугПоНомеру.Ссылка
	 |		КОГДА НЕ ПоступлениеТоваровУслугНомВхДок.Ссылка ЕСТЬ NULL 
	 |			ТОГДА ПоступлениеТоваровУслугНомВхДок.Ссылка
	 |		КОГДА НЕ ПриходнаяНакладнаяНомерСЧФ.Ссылка ЕСТЬ NULL 
	 |			ТОГДА ПриходнаяНакладнаяНомерСЧФ.Ссылка
	 |		КОГДА НЕ СчетФактураПолученныйПоНомеруУПД.ДокументОснование ЕСТЬ NULL 
	 |			ТОГДА ВЫРАЗИТЬ(СчетФактураПолученныйПоНомеруУПД.ДокументОснование КАК Документ.ПриходнаяНакладная)
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ КАК ПН,
	 |	ВЫБОР
	 |		КОГДА НЕ СчетФактураПолученныйПоНомеру.Ссылка ЕСТЬ NULL 
	 |			ТОГДА СчетФактураПолученныйПоНомеру.Ссылка
	 |		КОГДА НЕ СчетФактураПолученныйНомВхДок.Ссылка ЕСТЬ NULL 
	 |			ТОГДА СчетФактураПолученныйНомВхДок.Ссылка
	 |		КОГДА НЕ СчетФактураПолученныйНомерСЧФ.Ссылка ЕСТЬ NULL 
	 |			ТОГДА СчетФактураПолученныйНомерСЧФ.Ссылка
	 |		КОГДА НЕ СчетФактураПолученныйПоНомеруУПД.Ссылка ЕСТЬ NULL 
	 |			ТОГДА СчетФактураПолученныйПоНомеруУПД.Ссылка
	 |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	 |	КОНЕЦ КАК Счф
	 |ИЗ
	 |	XML_УПД КАК XML_УПД
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслугНомВхДок
	 |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйНомВхДок
	 |			ПО ПоступлениеТоваровУслугНомВхДок.Ссылка = СчетФактураПолученныйНомВхДок.ДокументОснование
	 |		ПО (НЕ ПоступлениеТоваровУслугНомВхДок.ПометкаУдаления)
	 |			И (ПоступлениеТоваровУслугНомВхДок.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, 3))
	 |			И (ПоступлениеТоваровУслугНомВхДок.Контрагент В (&amp;МассивКонтрагентов))
	 |			И (ПоступлениеТоваровУслугНомВхДок.Организация = XML_УПД.Организация)
	 |			И (ПоступлениеТоваровУслугНомВхДок.Проведен)
	 |			И (ПоступлениеТоваровУслугНомВхДок.Контрагент В (&amp;МассивКонтрагентов))
	 |			И (ПОДСТРОКА(ПоступлениеТоваровУслугНомВхДок.НомерВходящегоДокумента, 1, 100) = XML_УПД.НомерВходящегоДокумента)
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПоступлениеТоваровУслугПоНомеру
	 |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйПоНомеру
	 |			ПО ПоступлениеТоваровУслугПоНомеру.Ссылка = СчетФактураПолученныйПоНомеру.ДокументОснование
	 |		ПО (НЕ ПоступлениеТоваровУслугПоНомеру.ПометкаУдаления)
	 |			И (ПоступлениеТоваровУслугПоНомеру.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, 3))
	 |			И (ПоступлениеТоваровУслугПоНомеру.Контрагент В (&amp;МассивКонтрагентов))
	 |			И (ПоступлениеТоваровУслугПоНомеру.Организация = XML_УПД.Организация)
	 |			И (ПОДСТРОКА(ПоступлениеТоваровУслугПоНомеру.Номер, 1, 100) = XML_УПД.НомерВходящегоДокумента)
	 |			И (ПоступлениеТоваровУслугПоНомеру.Проведен)
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная КАК ПриходнаяНакладнаяНомерСЧФ
	 |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйНомерСЧФ
	 |			ПО ПриходнаяНакладнаяНомерСЧФ.Ссылка = СчетФактураПолученныйНомерСЧФ.ДокументОснование
	 |		ПО (НЕ ПриходнаяНакладнаяНомерСЧФ.ПометкаУдаления)
	 |			И (ПриходнаяНакладнаяНомерСЧФ.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, 3))
	 |			И (ПриходнаяНакладнаяНомерСЧФ.Контрагент В (&amp;МассивКонтрагентов))
	 |			И (ПриходнаяНакладнаяНомерСЧФ.Организация = XML_УПД.Организация)
	 |			И (ПриходнаяНакладнаяНомерСЧФ.Проведен)
	 |			И (ПОДСТРОКА(ПриходнаяНакладнаяНомерСЧФ.НомерВходящегоДокумента, 1, 100) = XML_УПД.НомерСЧФ)
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученныйПоНомеруУПД
	 |		ПО (XML_УПД.НомерСЧФ = ПОДСТРОКА(СчетФактураПолученныйПоНомеруУПД.НомерВходящегоДокумента, 1, 100))
	 |			И (СчетФактураПолученныйПоНомеруУПД.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, -3) И ДОБАВИТЬКДАТЕ(XML_УПД.ДатаВходящегоДокумента, ДЕНЬ, 3))
	 |			И (СчетФактураПолученныйПоНомеруУПД.Контрагент В (&amp;МассивКонтрагентов))
	 |			И XML_УПД.Организация = СчетФактураПолученныйПоНомеруУПД.Организация
	 |			И (НЕ СчетФактураПолученныйПоНомеруУПД.ПометкаУдаления)";
	 
	 Запрос.УстановитьПараметр("ДатаВходящегоДокумента" , Приемник.НакладнаяДата);
	 Запрос.УстановитьПараметр("МассивКонтрагентов"     , МассивКонтрагентов);
	 Запрос.УстановитьПараметр("НомерВходящегоДокумента", Приемник.НакладнаяНомер);
	 Запрос.УстановитьПараметр("Организация"            , Приемник.Организация);
	 Запрос.УстановитьПараметр("НомерСЧФ"               , Приемник.СЧФНомер);
	 Результат = Запрос.Выполнить();                  
	 Если НЕ Результат.Пустой() Тогда
		 Выборка = Результат.Выбрать();	
		 Выборка.Следующий();
		 ДокПН  = Выборка.ПН;
		 ДокСчФ = Выборка.СЧФ;
		 //Сообщить(ДокПН);
		 //Сообщить(ДокСчФ);
	 КонецЕсли;
	 
	 //Если Приемник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ON_SCHFDOPPR_01 Тогда
	 //Если ЗначениеЗаполнено(ДокПН) Тогда
		 // Документ уже существует	
		 //ПредставлениеДокПН = "Поступление № " + СокрЛП(ДокПН.Номер) + " от " + Формат(ДокПН.Дата, "ДФ=dd.MM.yyyy");
		 //Сообщить("Найден документ " + ПредставлениеДокПН + " по " + ПредстДокЭКОМ);
	 //Иначе
		 //МассивСтрок  = Новый Массив;
		 //СтруктураСтроки = Новый Структура;
		 //ТабЗнач = Новый ТаблицаЗначений;
		 //ТабЗнач.Колонки.Добавить("ЭКОМ_Документ_DESADV" , Новый ОписаниеТипов("ДокументСсылка.ЭКОМ_Документы"));
		 
		 //СтрТЧ = ТабЗнач.Добавить();
		 //СтрТЧ.ЭКОМ_Документ_DESADV = Приемник.Ссылка;
		 
		 //СтруктураСтроки.Вставить("Строка", СтрТЧ);
		 
		 //МассивСтрок.Добавить(СтруктураСтроки);
		 //СоздатьДокументыПоступления(МассивСтрок, ЛогСобытий);
	 //КонецЕсли;
	 
	 Если ЗначениеЗаполнено(ДокСчФ) Тогда 
		 // Сравниваем суммы из XML(ЭКОМ док) и документа 1С
		 ПредставлениеДокСчФ = "Счет-фактура № " + СокрЛП(ДокСчФ.Номер) + " от " + Формат(ДокСчФ.Дата, "ДФ=dd.MM.yyyy");
		 ЛогСобытий = ЛогСобытий + Символы.ПС + "Найден документ " + ПредставлениеДокСчФ + " по " + ПредстДокЭКОМ;
		 
		 РасхождениеПоСумме_с_НДС = (ДокПН.СуммаДокумента - Приемник.СуммаДокументаВсего);
		 РасхождениеПоСумме_с_НДС = ?(РасхождениеПоСумме_с_НДС &gt; 0   , РасхождениеПоСумме_с_НДС, - РасхождениеПоСумме_с_НДС);
		 ЕстьРасхождениеПоСумме_с_НДС = ?(РасхождениеПоСумме_с_НДС &gt; 0.05, Истина, Ложь);
		 
		 ЭКОМСуммаБезНДС = 0;
		 ЭКОМСуммаНДС = 0;
		 Для каждого Стр Из Приемник.ТЧ_Товары Цикл
			 ЭКОМСуммаБезНДС = ЭКОМСуммаБезНДС + Стр.Сумма;
			 ЭКОМСуммаНДС    = ЭКОМСуммаНДС    + Стр.СуммаНДС;
		 КонецЦикла;
		 
		 СуммаНДСДокумента = 0;
		 Для каждого Стр Из ДокПН.Товары Цикл
			 СуммаНДСДокумента = СуммаНДСДокумента + Стр.СуммаНДС;
		 КонецЦикла;
		 
		 РасхождениеПоСуммеНДС = (СуммаНДСДокумента - ЭКОМСуммаНДС);
		 РасхождениеПоСуммеНДС = ?(РасхождениеПоСуммеНДС &gt; 0   , РасхождениеПоСуммеНДС, - РасхождениеПоСуммеНДС);
		 ЕстьРасхождениеПоСуммеНДС = ?(РасхождениеПоСуммеНДС &gt; 0.05, Истина, Ложь);
		 
		 СуммаБезНДС = ДокПН.СуммаДокумента - СуммаНДСДокумента;
		 РасхождениеПоСуммеБезНДС = (СуммаБезНДС - ЭКОМСуммаБезНДС);
		 РасхождениеПоСуммеБезНДС = ?(РасхождениеПоСуммеБезНДС &gt; 0, РасхождениеПоСуммеБезНДС, - РасхождениеПоСуммеБезНДС);
		 ЕстьРасхождениеПоСуммеБезНДС = ?(РасхождениеПоСуммеБезНДС &gt; 0.05, Истина, Ложь);
		 
		 Если ЕстьРасхождениеПоСумме_с_НДС 
			 ИЛИ ЕстьРасхождениеПоСуммеНДС 
			 ИЛИ ЕстьРасхождениеПоСуммеБезНДС Тогда  
			 ТекстУточнения = "Проверьте суммы документов: " + 
			 "Сумма Всего 1С " + ПредставлениеДокСчФ + " = " + ДокПН.СуммаДокумента + "; "
			 "Сумма Всего УПД = " + Приемник.СуммаДокументаВсего + "; " +
			 "Сумма без НДС 1С = " + СуммаБезНДС + "; " +
			 "Сумма без НДС УПД =  " + ЭКОМСуммаБезНДС + "; " + 
			 "Сумма НДС 1С = " + СуммаНДСДокумента + "; " +
			 "Сумма НДС УПД =  " + ЭКОМСуммаНДС;
			 Сообщить(ТекстУточнения, СтатусСообщения.Важное);  
		 КонецЕсли;
		 
		 
		 //Иначе
		 // ***** УКД *****
		 //Если ЗначениеЗаполнено(ДокКоррПН) Тогда
		 //	// Документ корректировки уже существует
		 //	ПредставлениеДокКоррПН = "Поступление № " + СокрЛП(ДокПН.Номер) + " от " + Формат(ДокПН.Дата, "ДФ=dd.MM.yyyy");		
		 //	Сообщить("Найден документ " + ПредставлениеДокКоррПН + " по " + ПредстДокЭКОМ);
		 //КонецЕсли;
		 
		 //Если ЗначениеЗаполнено(ДокКоррСчФ)  Тогда
		 //	// Сравниваем суммы из XML(ЭКОМ док) и документа 1С
		 //	ПредставлениеДокКоррСчФ = "Корр счет-фактура № " + СокрЛП(ДокСчФ.Номер) + " от " + Формат(ДокСчФ.Дата, "ДФ=dd.MM.yyyy");		 
		 //	Сообщить("Найден документ " + ПредставлениеДокКоррСчФ + " по " + ПредстДокЭКОМ);
		 //	
		 //	// Сравниваем суммы из XML(ЭКОМ док) и документа 1С
		 //	ПредставлениеДокСчФ = "Счет-фактура № " + СокрЛП(ДокСчФ.Номер) + " от " + Формат(ДокСчФ.Дата, "ДФ=dd.MM.yyyy");
		 //	Сообщить("Найден документ " + ПредставлениеДокСчФ + " по " + ПредстДокЭКОМ);
		 //	
		 //	РасхождениеПоСумме = (ДокСчФ.СуммаДокумента - Приемник.СуммаДокументаВсего);
		 //	РасхождениеПоСумме = ?(РасхождениеПоСумме &gt; 0   , РасхождениеПоСумме, - РасхождениеПоСумме);
		 //	ЕстьРасхождениеПоСумме = ?(РасхождениеПоСумме &gt; 0.05, Истина, Ложь);
		 //	
		 //	ЭКОМСуммаНДС = Приемник.ТЧ_Товары.Свернуть("СуммаНДС");
		 //	РасхождениеПоСуммеНДС = (ДокСчФ.СуммаНДСДокумента - ЭКОМСуммаНДС);
		 //	РасхождениеПоСуммеНДС = ?(РасхождениеПоСуммеНДС &gt; 0   , РасхождениеПоСуммеНДС, - РасхождениеПоСуммеНДС);
		 //	ЕстьРасхождениеПоСуммеНДС = ?(РасхождениеПоСуммеНДС &gt; 0.05, Истина, Ложь);
		 //	
		 //	Если ЕстьРасхождениеПоСумме 
		 //		ИЛИ ЕстьРасхождениеПоСуммеНДС Тогда  
		 //		ТекстОшибки = "Проверьте суммы документов: " + 
		 //		"Сумма Всего 1С " + ПредставлениеДокСчФ + " = " + ДокПН.СуммаДокумента + "; "
		 //		"Сумма Всего УПД = " + Приемник.СуммаДокументаВсего + "; " +
		 //		"Сумма без НДС 1С = " + СуммаБезНДС + "; " +
		 //		"Сумма без НДС УПД =  " + ЭКОМСуммаБезНДС + "; " + 
		 //		"Сумма НДС 1С = " + СуммаНДСДокумента + "; " +
		 //		"Сумма НДС УПД =  " + ЭКОМСуммаНДС;  	
		 //	КонецЕсли;
		 //	
		 //	//Если ЗначениеЗаполнено(ДокКоррПН) И ЗначениеЗаполнено(ДокКоррСчФ) Тогда
		 //	//	ДокЭКОМОбъект.ДокументыСвязанные.Очистить();
		 //	//	НовСтр = ДокЭКОМОбъект.ДокументыСвязанные.Добавить();
		 //	//	НовСтр.ДокументСвязанный = ДокКоррПН.Ссылка;
		 //	//	
		 //	//	ДокЭКОМОбъект.Документ1С = ДокКоррСчФ.Ссылка;
		 //	//	ДокументыНайдены = Истина;
		 //	//КонецЕсли;
		 //КонецЕсли;
	 ИначеЕсли ЗначениеЗаполнено(ДокПН) Тогда
		 МассивСтрок  = Новый Массив;
		 СтруктураСтроки = Новый Структура;
		 ТабЗнач = Новый ТаблицаЗначений;
		 ТабЗнач.Колонки.Добавить("ДокументПоступления" , Новый ОписаниеТипов("ДокументСсылка.ПриходнаяНакладная"));
		 
		 СтрТЧ = ТабЗнач.Добавить();
		 СтрТЧ.ДокументПоступления = ДокПН.Ссылка;
		 
		 СтруктураСтроки.Вставить("Строка", СтрТЧ);
		 МассивСтрок.Добавить(СтруктураСтроки);
		 
		 СоздатьДокументыСчетФактурыПолученный(МассивСтрок, ЛогСобытий);
		 
		 ДокСчФ = ОбщегоНазначения.НайтиПодчиненныйДокумент(ДокПН.Ссылка, "СчетФактураПолученный");
	 Иначе
		 ЛогСобытий = ЛогСобытий + Символы.ПС + "Приходная накладная по УПД не найдена № " + Приемник.НакладнаяНомер + " от " + Приемник.НакладнаяДата;
	 КонецЕсли;
	 //КонецЕсли;
	 
	 Если ЗначениеЗаполнено(ДокСчФ) 
		 И ЗначениеЗаполнено(ДокПН) Тогда
		 ДокСчФОбъект = ДокСчФ.ПолучитьОбъект();
		 ДокСчФОбъект.ДатаВходящегоДокумента  = Приемник.СЧФДата;
		 ДокСчФОбъект.НомерВходящегоДокумента = Приемник.СЧФНомер;
		 ДокСчФОбъект.Записать();
		 
		 Приемник.ДокументыСвязанные.Очистить();
		 НовСтр = Приемник.ДокументыСвязанные.Добавить();
		 НовСтр.ДокументСвязанный = ДокПН.Ссылка;
		 
		 Приемник.Документ1С = ДокСчФ.Ссылка;
		 
		 // Проставляем есть электронный документ и соответсвует 
		 ДокПНОбъект = ДокПН.ПолучитьОбъект(); 
		 ДокПНОбъект.ЕстьЭлектронныйДокумент = Истина;
		 
		 Если НЕ ЗначениеЗаполнено(ТекстУточнения)  Тогда
			 ДокПНОбъект.СоответствуетЭлектронномуДокументу = Истина;
		 КонецЕсли;
		 ДокПНОбъект.Записать();
		 
		 Приемник.Записать(РежимЗаписиДокумента.Проведение); 
		 
	 Иначе
		 
		 Приемник.Записать(РежимЗаписиДокумента.Запись);
		 
	 КонецЕсли;
	 
	 Если ЗначениеЗаполнено(ТекстУточнения) Тогда
		 Приемник.Комментарий = ТекстУточнения;
	 КонецЕсли;
	 
 КонецЕсли;
 
 
 
 
</Value>
		<Value xsi:nil="true"/>
		<Value xsi:type="xs:string">ЮЗД (УПД / УКД / иУПД)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>