<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий DESADV</Value>
		<Value xsi:type="xs:string">Если НЕ ЗначениеЗаполнено(Приемник.xmlВалюта) Тогда
            Приемник.xmlВалюта = "RUB";
КонецЕсли;

Приемник.Записать();

Если НЕ ЗначениеЗаполнено(Приемник.Документ1С) 
	ИЛИ НЕ ЗначениеЗаполнено(Приемник.ТочкаДоставки) Тогда
	
	Заказ = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Заказ.Ссылка КАК Ссылка,
	|	Заказ.ДоговорКонтрагента КАК ДоговорГрузополучателя,
	|	Заказ.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ДоговорГрузополучателяВалютаВзаиморасчетов
	|ИЗ
	|	Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПоставщика КАК Заказ
	|		ПО (ЭКОМ_Документы.ЗаказНомер = Заказ.Номер)
	|			И (ЭКОМ_Документы.ЗаказДата = Заказ.Дата)
	|ГДЕ
	|	ЭКОМ_Документы.Ссылка = &amp;Ссылка
	|	И НЕ Заказ.ПометкаУдаления";
	Запрос.УстановитьПараметр("Ссылка", Приемник.Ссылка);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Заказ = Выборка.Ссылка;
		Приемник.Валюта        = Выборка.ДоговорГрузополучателяВалютаВзаиморасчетов;
		Приемник.Документ1С    = Заказ;
		Приемник.ТочкаДоставки = Выборка.ДоговорГрузополучателя;
	КонецЕсли;	
	
Иначе
	
	Заказ = Приемник.Документ1С;
	
КонецЕсли;	


Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ЭКОМ_ДокументыТЧ_Товары.НомерПродукта КАК НомерПродукта,
|	Абр_ЗаявкаТовары.Номенклатура КАК Номенклатура,
|	Абр_ЗаявкаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
|ИЗ
|	Документ.ЭКОМ_Документы.ТЧ_Товары КАК ЭКОМ_ДокументыТЧ_Товары
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПоставщика.Товары КАК Абр_ЗаявкаТовары
|		ПО (ЭКОМ_ДокументыТЧ_Товары.НомерПродукта = Абр_ЗаявкаТовары.Номенклатура.Код)
|ГДЕ
|	ЭКОМ_ДокументыТЧ_Товары.Ссылка = &amp;Документ
|	И Абр_ЗаявкаТовары.Ссылка = &amp;Заказ";
Запрос.УстановитьПараметр("Документ", Приемник.Ссылка);
Запрос.УстановитьПараметр("Заказ"   , Заказ);

Результат = Запрос.Выполнить();
ТЗ = Результат.Выгрузить();
ТЗ.Индексы.Добавить("НомерПродукта");

Для Каждого Стр Из Приемник.ТЧ_Товары Цикл
	НайденнаяСтрока = ТЗ.Найти(Стр.НомерПродукта, "НомерПродукта");	
	Если НЕ НайденнаяСтрока = Неопределено Тогда  
		Стр.Номенклатура     = НайденнаяСтрока.Номенклатура;
		Стр.ЕдиницаИзмерения = НайденнаяСтрока.ЕдиницаИзмерения;
	КонецЕсли;          
КонецЦикла;


//Сначала ищем существующий документ поступления
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
|ИЗ
|	Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
|		ПО (ПоступлениеТоваровУслуг.НомерВходящегоДокумента = ЭКОМ_Документы.ФайлНомер)
|			И (ПоступлениеТоваровУслуг.ДатаВходящегоДокумента = ЭКОМ_Документы.ФайлДата)
|ГДЕ
|	ЭКОМ_Документы.Ссылка = &amp;Ссылка
|	И НЕ ПоступлениеТоваровУслуг.Ссылка ЕСТЬ NULL";
Запрос.УстановитьПараметр("Ссылка", Приемник.Ссылка);
Результат = Запрос.Выполнить();
Если НЕ Результат.Пустой() Тогда
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Поступление = Выборка.Ссылка;
	
	Приемник.ДокументыСвязанные.Очистить();
	Нов = Приемник.ДокументыСвязанные.Добавить();
	Нов.ДокументСвязанный = Поступление;
	
Иначе
	
	Приемник.Записать();
	МассивСтрок  = Новый Массив;
	СтруктураСтроки = Новый Структура;
	ТабЗнач = Новый ТаблицаЗначений;
	ТабЗнач.Колонки.Добавить("ЭКОМ_Документ_DESADV" , Новый ОписаниеТипов("ДокументСсылка.ЭКОМ_Документы"));
	
	СтрТЧ = ТабЗнач.Добавить();
	СтрТЧ.ЭКОМ_Документ_DESADV = Приемник.Ссылка;
	
	СтруктураСтроки.Вставить("Строка", СтрТЧ);
	
	МассивСтрок.Добавить(СтруктураСтроки);
	//СоздатьДокументыПоступления(МассивСтрок, ЛогСобытий);
	
КонецЕсли;	


</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Уведомление об отгрузке (DESADV)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>