// БП 3.0
	ИмяОрганизации   = "Организация";
	ИмяКонтрагента   = "Контрагент";
	ИмяТочкиДоставки = "ДоговорКонтрагента";
	ИмяЗаказа1С      = "СчетНаОплатуПокупателю";
	ИмяДатаПоставки  = "Дата";
	ДатаЗаказа1С     = "Дата";
	НомерЗаказа1С    = "Номер";
	ДокументОснованиеСЧФ = "ДокументОснование";
	ОснованиеКорректировкиРеализации = "ДокументРеализации";
	ИмяКонфигурации = "БП3.0";
	
	//УТ 10.3, УПП 1.3
	//ИмяОрганизации		= "Организация";       
	//ИмяКонтрагента		= "Контрагент";
	//ИмяТочкиДоставки	 	= "Склад";
	//ИмяЗаказа1С	        = "Сделка";
	//НомерЗаказа1С        	= "Номер";
	//ДатаЗаказа1С         	= "Дата";
	//ДокументОснованиеСЧФ 	= "ДокументОснование";
	//ИмяДатаПоставки      	= "Дата";
	//ОснованиеКорректировкиРеализации = "ДокументРеализации";
	//ИмяКонфигурации = "УТ10.3";
	
	//УТ 11.4
	//ИмяОрганизации   = "Организация";
	//ИмяКонтрагента   = "Контрагент";
	//ИмяТочкиДоставки = "Склад";
	//ИмяЗаказа1С      = "ЗаказПоставщику";
	//ИмяДатаПоставки  = "ЖелаемаяДатаПоступления";
	//ДатаЗаказа1С     = "ДатаПоДаннымКлиента";
	//НомерЗаказа1С    = "НомерПоДаннымКлиента";
	//ОснованиеКорректировкиРеализации = "ДокументОснование";
	//ИмяКонфигурации = "УТ11.4";
	
	// Документ ЭКОМ
Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.ЭКОМ_Документы") Тогда
	
	Если Источник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ORDER_Входящий Тогда
		
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ORDER.Установить(Источник.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		// Если существует документ в регистре
		Для Каждого НоваяЗапись Из НаборЗаписей Цикл
			
			НоваяЗапись.ДатаПоставки  = Источник.ДатаПоставки;
			НоваяЗапись.Организация   = Источник[ИмяОрганизации];
			НоваяЗапись.Контрагент    = Источник[ИмяКонтрагента];
			НоваяЗапись.ТочкаДоставки = Источник[ИмяТочкиДоставки];
			
			НоваяЗапись.КоличествоORDER = Источник.ТЧ_Товары.Итог("КоличествоЗаказанное");
			НоваяЗапись.СуммаORDER = Источник.ТЧ_Товары.Итог("Сумма_с_НДС");
			
		КонецЦикла;	
		
		НаборЗаписей.Записать();
		
	ИначеЕсли Источник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.RECADV_Входящий Тогда
		
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.RECADV.Установить(Источник.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		// Если существует документ в регистре
		Для Каждого НоваяЗапись Из НаборЗаписей Цикл
			
			НоваяЗапись.КоличествоRECADV = Источник.ТЧ_Товары.Итог("КоличествоЗаказанное");
			НоваяЗапись.СуммаRECADV = Источник.ТЧ_Товары.Итог("Сумма_с_НДС");
			
		КонецЦикла;	
		
	КонецЕсли;
	
ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка." + ИмяЗаказа1С) Тогда
	
	НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Заказ.Установить(Источник.Ссылка);
	
	НаборЗаписей.Прочитать();
	
	// Если существует запись в регистре
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		
		НоваяЗапись.КоличествоЗаказ = Источник.Товары.Итог("Количество");
		НоваяЗапись.СуммаЗаказ      = Источник.Товары.Итог("Сумма");
		
		НаборЗаписей.Записать();
		
	КонецЦикла;	
	
	// Запись не найдена в цепочке
	Если НаборЗаписей.Количество() = 0 Тогда
		// Сообщать только для тестирования 
		//Сообщить("Не найден документ Заказ покупателя или не все измерения заполнены для регистра сведений ""ЭКОМ_ЦепочкиДокументовПоставщика""", СтатусСообщения.ОченьВажное);			
	КонецЕсли;
	
ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	
	НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Накладная.Установить(Источник.Ссылка);
	
	//Выполним блокировку данных
	ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() 	= 0
		И Источник.Услуги.Количество() > 0  Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Накладная 		= Источник.Ссылка;
		НоваяЗапись.Организация   	= Источник.Ссылка[ИмяОрганизации];
		НоваяЗапись.Контрагент    	= Источник.Ссылка[ИмяКонтрагента];
		НоваяЗапись.Заказ    		= Источник.Ссылка[ИмяЗаказа1С];
		НоваяЗапись.ORDERNUMBER		= Источник.Ссылка[ИмяЗаказа1С].Номер;
		НоваяЗапись.ORDERDATE		= Источник.Ссылка[ИмяЗаказа1С].Дата;
		НоваяЗапись.ДатаПоставки    = Источник.Ссылка[ИмяДатаПоставки];
	КонецЕсли;
	
	// Если существует запись в регистре
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		
		НоваяЗапись.КоличествоНакладная = Источник.Товары.Итог("Количество");
		НоваяЗапись.СуммаНакладная = Источник.Товары.Итог("Сумма");
		НоваяЗапись.СуммаНДСНакладная   = Источник.Товары.Итог("СуммаНДС");
			
		НаборЗаписей.Записать();
		
	КонецЦикла;	
	
	// Если есть дубли
	Если НаборЗаписей.Количество() > 1 Тогда
		// Сообщать только для тестирования 
		Сообщить("В двух или более цепочках документов одна и та же РТУ. Так быть не должно.", СтатусСообщения.ОченьВажное);			
	КонецЕсли;
	
	//Корректировка реализации
ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
	
	Если ИмяКонфигурации = "БП3.0" Тогда
		РТУ = Вычислить("УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(Источник.Ссылка, Истина)");
	ИначеЕсли ИмяКонфигурации = "УТ10.3" Тогда
		РТУ = Вычислить("УчетНДС.ПолучитьИсправляемыйДокументРеализации(Источник.Ссылка, Истина)");
	Иначе
		РТУ = Неопределено;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Накладная.Установить(РТУ);
	
	НаборЗаписей.Прочитать();
	
	// Если существует запись в регистре
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		
		ПредыдущаяКорректировка = НоваяЗапись.Накладная_Кор;
		Если Источник[ОснованиеКорректировкиРеализации] = ПредыдущаяКорректировка ИЛИ (Источник[ОснованиеКорректировкиРеализации] = НоваяЗапись.Накладная И НЕ ЗначениеЗаполнено(ПредыдущаяКорректировка)) Тогда 
			// Если это создание новой корректировки, перезапишем ссылку и сбросим статусы 
			НоваяЗапись.Накладная_Кор = Источник.Ссылка;
			НоваяЗапись.КоличествоНакладная_Кор = Источник.Товары.Итог("Количество");
			НоваяЗапись.СуммаНакладная_Кор = Источник.Товары.Итог("Сумма"); 
			НоваяЗапись.СуммаНДСНакладная_Кор = Источник.Товары.Итог("СуммаНДС");
			
			Если ПредыдущаяКорректировка <> Источник.Ссылка Тогда
				
				НоваяЗапись.Статус_DP_IZVPOL_04 = Ложь;
				НоваяЗапись.Статус_DP_IZVPOL_06 = Ложь;
				НоваяЗапись.Статус_DP_IZVPOL_10 = Ложь;
				НоваяЗапись.Статус_DP_PDPOL_02 = Ложь;
				НоваяЗапись.Статус_DP_UVUTOCH_09 = Ложь;
				НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11 = Ложь;
				НоваяЗапись.Статус_ON_KORSCHFDOPPR_01 = Ложь;
				НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
				НоваяЗапись.Статус_ON_NSCHFDOPPOK_11 = Ложь;
				НоваяЗапись.Статус_ON_NSCHFDOPPR_01 = Ложь;
				НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр = Ложь;
				
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
		ИначеЕсли Источник.Ссылка = НоваяЗапись.Накладная_Кор Тогда
			// Если это перезапись уже существующей корректировки, обновим только количество и сумму
			НоваяЗапись.КоличествоНакладная_Кор = Источник.Товары.Итог("Количество");
			НоваяЗапись.СуммаНакладная_Кор = Источник.Товары.Итог("Сумма"); 
			НоваяЗапись.СуммаНДСНакладная_Кор = Источник.Товары.Итог("СуммаНДС");
			
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
	КонецЦикла;	
	
	// Запись не найдена в цепочке
	Если НаборЗаписей.Количество() = 0 Тогда
		// Сообщать только для тестирования 
		//Сообщить("Не найден документ Реализация товаров и услуг или не все измерения заполнены для регистра сведений ""ЭКОМ_ЦепочкиДокументовПоставщика""", СтатусСообщения.ОченьВажное);			
	КонецЕсли;		
	
	//СчетФактураВыданный
ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
	
	ДокументОснование = Источник.ДокументОснование;
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
		РТУ = ДокументОснование;	
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Если ИмяКонфигурации = "БП3.0" Тогда
			РТУ = Вычислить("УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(ДокументОснование, Истина)");
		ИначеЕсли ИмяКонфигурации = "УТ10.3" Тогда
			РТУ = Вычислить("УчетНДС.ПолучитьИсправляемыйДокументРеализации(ДокументОснование, Истина)");
		КонецЕсли;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Накладная.Установить(РТУ);
	
	НаборЗаписей.Прочитать();
	
	// Если существует запись в регистре
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		
		ПредыдущаяКорректировка = НоваяЗапись.Накладная_Кор;
		Если (Источник.ДокументОснование = ПредыдущаяКорректировка ИЛИ (Источник.ДокументОснование = НоваяЗапись.Накладная И НЕ ЗначениеЗаполнено(ПредыдущаяКорректировка)))
			// Если это счет-фактура по новой корректировке
			ИЛИ Источник.ДокументОснование = НоваяЗапись.Накладная_Кор Тогда
			// Если это перезапись уже существующего счета-фактуры
			
			НоваяЗапись.СЧФ      = Источник.Ссылка;
			Если ИмяКонфигурации = "УТ11.4" Тогда
				НоваяЗапись.СуммаСЧФ = Источник.ДокументОснование.СуммаДокумента;
			Иначе
				НоваяЗапись.СуммаСЧФ = Источник.СуммаДокумента;
			КонецЕсли;
			НоваяЗапись.НомерИсправления = Источник.НомерИсправления;
			
			НаборЗаписей.Записать();
			
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;	
	
	// Запись не найдена в цепочке
	Если НаборЗаписей.Количество() = 0 Тогда
		// Сообщать только для тестирования 
		//Сообщить("Не найден документ Реализации товаров и услуг или не все измерения заполнены для регистра сведений ""ЭКОМ_ЦепочкиДокументовПоставщика""", СтатусСообщения.ОченьВажное);			
	КонецЕсли;		
	
КонецЕсли;