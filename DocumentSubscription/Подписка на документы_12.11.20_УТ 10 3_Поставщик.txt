//УТ 10.3
	ТипДокументаСЧФ           = "ДокументСсылка.СчетФактураВыданный";
	ТипДокументаКорректировки = "ДокументСсылка.КорректировкаРеализации";
	ТипДокументаРеализации    = "ДокументСсылка.РеализацияТоваровУслуг";
	ТипДокументаЭКОМ          = "ДокументСсылка.ЭКОМ_Документы";
	ТипДокументаПоступления   = "ДокументСсылка.ПоступлениеТоваровУслуг";

	ТабЧастьКоличество = "Количество";
	ТабЧастьСумма      = "Сумма";
	ТабЧастьСуммаНДС   = "СуммаНДС";
	
	ИмяЗаказа1С          = "Сделка";
	ИмяОрганизации		 = "Организация";
	ИмяКонтрагента		 = "Контрагент";
	ИмяТочкиДоставки	 = "Грузополучатель";
	НомерЗаказа1С        = "НомерВходящегоДокументаЭлектронногоОбмена";
	ДатаЗаказа1С         = "ДатаВходящегоДокументаЭлектронногоОбмена";
	ДокументОснованиеСЧФ  = "ДокументОснование";
	НомерИсправления      = "НомерИсправления";
	СуммаДокументаСЧФ     = "СуммаДокумента";

// Документ ЭКОМ
Если ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.ЭКОМ_Документы") Тогда
	
	Если Источник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.ORDER_Входящий Тогда
		
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ORDER.Установить(Источник.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		// Если существует документ в регистре
		Для Каждого НоваяЗапись Из НаборЗаписей Цикл
			
			НоваяЗапись.ДатаПоставки  = Источник.ДатаПоставки;
			НоваяЗапись.Организация   = Источник.Организация;
			НоваяЗапись.Контрагент    = Источник.Контрагент;
			НоваяЗапись.ТочкаДоставки = Источник.ТочкаДоставки;
			
			НоваяЗапись.КоличествоORDER = Источник.ТЧ_Товары.Итог("КоличествоЗаказанное");
			НоваяЗапись.СуммаORDER = Источник.ТЧ_Товары.Итог("Сумма_с_НДС");
			
		КонецЦикла;	
		
		НаборЗаписей.Записать();
		
	ИначеЕсли Источник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.RECADV_Входящий Тогда
		
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.RECADV.Установить(Источник.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		// Если существует документ в регистре
		Для Каждого НоваяЗапись Из НаборЗаписей Цикл
			
			НоваяЗапись.КоличествоRECADV = Источник.ТЧ_Товары.Итог("КоличествоЗаказанное");
			НоваяЗапись.СуммаRECADV = Источник.ТЧ_Товары.Итог("Сумма_с_НДС");
			
		КонецЦикла;	
		
	КонецЕсли;
	
ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	
	НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Заказ.Установить(Источник.Ссылка);
	
	НаборЗаписей.Прочитать();
	
	// Если существует запись в регистре
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		
		НоваяЗапись.КоличествоЗаказ = Источник.Товары.Итог("Количество");
		НоваяЗапись.СуммаЗаказ      = Источник.Товары.Итог("Сумма");
		
		НаборЗаписей.Записать();
		
	КонецЦикла;	
	
	// Запись не найдена в цепочке
	Если НаборЗаписей.Количество() = 0 Тогда
		// Сообщать только для тестирования 
		//Сообщить("Не найден документ Заказ покупателя или не все измерения заполнены для регистра сведений ""ЭКОМ_ЦепочкиДокументовПоставщика""", СтатусСообщения.ОченьВажное);			
	КонецЕсли;
	
ИначеЕсли ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
	
	НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Накладная.Установить(Источник.Ссылка);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
	
	  ИмяЗаказа1С = "Сделка";
	  // Поиск по заказу
	  НаборЗаписейПоЗаказу = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
	  НаборЗаписейПоЗаказу.Отбор.Заказ.Установить(Источник[ИмяЗаказа1С]);
	  
	  НаборЗаписейПоЗаказу.Прочитать();
	  // Если существует запись в регистре
	   Для Каждого НоваяЗапись Из НаборЗаписейПоЗаказу Цикл
		
	    НоваяЗапись.Накладная = Источник.Ссылка;
		НоваяЗапись.КоличествоНакладная = Источник.Товары.Итог("Количество");
		НоваяЗапись.СуммаНакладная = Источник.Товары.Итог("Сумма");
		
		НаборЗаписейПоЗаказу.Записать();
		
	    КонецЦикла;	

	Иначе
	     
	// Если существует запись в регистре
	Для Каждого НоваяЗапись Из НаборЗаписей Цикл
		
		НоваяЗапись.КоличествоНакладная = Источник.Товары.Итог("Количество");
		НоваяЗапись.СуммаНакладная = Источник.Товары.Итог("Сумма");
		
		НаборЗаписей.Записать();
		
	КонецЦикла;	
	
    КонецЕсли;
	
	
	
	// Если есть дубли
	Если НаборЗаписей.Количество() > 1 Тогда
		// Сообщать только для тестирования 
		Сообщить("В двух или более цепочках документов одна и та же РТУ. Так быть не должно.", СтатусСообщения.ОченьВажное);			
	КонецЕсли;
	
	
КонецЕсли;

////////////////////////////////////////////////////////////////////////////////
	// Корректировка реализации
	//	
	Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировки) Тогда
		
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		ЗаказКлиента = Неопределено;
		РТУ = ПолучитьИсправляемыйДокументРеализации(Источник,,"ДокументРеализации");    
		Организация   = Неопределено;
		Контрагент    = Неопределено;	
		ТочкаДоставки = Неопределено; 
		Если ЗначениеЗаполнено(РТУ) Тогда
			Организация   = РТУ[ИмяОрганизации];
			Контрагент    = РТУ[ИмяКонтрагента];	
			ТочкаДоставки = РТУ[ИмяТочкиДоставки];
			ЗаказКлиента  = РТУ[ИмяЗаказа1С];
		КонецЕсли;
		
		ORDERDATE = Дата(0001, 01, 01);
		ORDERNUMBER = "";		
		Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
			ORDERDATE   = ЗаказКлиента[ДатаЗаказа1С];
			ORDERNUMBER = ЗаказКлиента[НомерЗаказа1С];
		КонецЕсли;
		
		ДанныеОтбораЗаполнены = Ложь;
		СтруктураОтборов = Новый Структура;
		СтруктураОтборов.Вставить("ORDERDATE"    , ORDERDATE);
		СтруктураОтборов.Вставить("ORDERNUMBER"  , ORDERNUMBER);
		СтруктураОтборов.Вставить("Заказ"        , ЗаказКлиента);
		СтруктураОтборов.Вставить("Организация"  , Организация);
		СтруктураОтборов.Вставить("Контрагент"   , Контрагент);
		СтруктураОтборов.Вставить("ТочкаДоставки", ТочкаДоставки);
		СтруктураОтборов.Вставить("Накладная"    , РТУ);
		Для каждого Данные Из СтруктураОтборов Цикл
			Если ЗначениеЗаполнено(Данные.Значение) Тогда
				НаборЗаписей.Отбор[Данные.Ключ].Установить(Данные.Значение);
				ДанныеОтбораЗаполнены = Истина;
			КонецЕсли;
		КонецЦикла;     
		
		
		Если ДанныеОтбораЗаполнены = Истина Тогда
			
			//Выполним блокировку данных
			ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");
			
			НаборЗаписей.Прочитать();
			
			// Если существует запись в регистре
			Для Каждого НоваяЗапись Из НаборЗаписей Цикл
						
				ПерезаписатьНаНовуюКорректировку = НЕ Источник.Ссылка = НоваяЗапись.Накладная_Кор;
				ЭтоНоваяКорректировка            = НЕ ЗначениеЗаполнено(НоваяЗапись.Накладная_Кор);
 
				Если ПерезаписатьНаНовуюКорректировку
					ИЛИ ЭтоНоваяКорректировка Тогда 
									
					// Если это создание новой корректировки, перезапишем ссылку и сбросим статусы 
					НоваяЗапись.Накладная_Кор           = Источник.Ссылка;
					НоваяЗапись.КоличествоНакладная_Кор = Источник.Товары.Итог(ТабЧастьКоличество);
					НоваяЗапись.СуммаНакладная_Кор      = Источник.Товары.Итог(ТабЧастьСумма); 
					НоваяЗапись.СуммаНДСНакладная_Кор   = Источник.Товары.Итог(ТабЧастьСуммаНДС);
							
					НаборЗаписей.Записать();
					
				ИначеЕсли Источник.Ссылка = НоваяЗапись.Накладная_Кор Тогда
					// Если это перезапись уже существующей корректировки, обновим только количество и сумму
					НоваяЗапись.КоличествоНакладная_Кор = Источник.Товары.Итог(ТабЧастьКоличество);
					НоваяЗапись.СуммаНакладная_Кор      = Источник.Товары.Итог(ТабЧастьСумма); 
					НоваяЗапись.СуммаНДСНакладная_Кор   = Источник.Товары.Итог(ТабЧастьСуммаНДС);
	
					НаборЗаписей.Записать();
					
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	// СчетФактураВыданный
	//	
	Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСЧФ) Тогда
		
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		коррРТУ      = Неопределено; 
		РТУ          = Неопределено;
		ЗаказКлиента = Неопределено;
		ДокументОснование = Источник[ДокументОснованиеСЧФ];
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
			РТУ = ДокументОснование;
			ЭтоСЧФ_Корр = Ложь;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			коррРТУ = ДокументОснование;
			РТУ     = ПолучитьИсправляемыйДокументРеализации(коррРТУ,,"ДокументРеализации");
			ЭтоСЧФ_Корр = Истина;
		КонецЕсли;
		
		ORDERDATE = Дата(0001, 01, 01);
		ORDERNUMBER = "";		
		Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
			ORDERDATE   = ЗаказКлиента[ДатаЗаказа1С];
			ORDERNUMBER = ЗаказКлиента[НомерЗаказа1С];		
		КонецЕсли;
		
		Организация   = Неопределено;
		Контрагент    = Неопределено;	
		ТочкаДоставки = Неопределено; 
		Если ЗначениеЗаполнено(РТУ) Тогда
			Организация   = РТУ[ИмяОрганизации];
			Контрагент    = РТУ[ИмяКонтрагента];	
			ТочкаДоставки = РТУ[ИмяТочкиДоставки];
			ЗаказКлиента  = РТУ[ИмяЗаказа1С];
		КонецЕсли;
		
		ДанныеОтбораЗаполнены = Ложь;
		СтруктураОтборов = Новый Структура;
		СтруктураОтборов.Вставить("ORDERDATE"    , ORDERDATE);
		СтруктураОтборов.Вставить("ORDERNUMBER"  , ORDERNUMBER);
		СтруктураОтборов.Вставить("Заказ"        , ЗаказКлиента);
		СтруктураОтборов.Вставить("Организация"  , Организация);
		СтруктураОтборов.Вставить("Контрагент"   , Контрагент);
		СтруктураОтборов.Вставить("ТочкаДоставки", ТочкаДоставки);
		СтруктураОтборов.Вставить("Накладная"    , РТУ);
		СтруктураОтборов.Вставить("Накладная_Кор", коррРТУ);
		Для каждого Данные Из СтруктураОтборов Цикл
			Если ЗначениеЗаполнено(Данные.Значение) Тогда
				НаборЗаписей.Отбор[Данные.Ключ].Установить(Данные.Значение);
				ДанныеОтбораЗаполнены = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ДанныеОтбораЗаполнены = Истина Тогда
			
			//Выполним блокировку данных
			ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");
			
			НаборЗаписей.Прочитать();
			
			// Если существует запись в регистре
			Для Каждого НоваяЗапись Из НаборЗаписей Цикл
				
				Если ЭтоСЧФ_Корр Тогда
					ПерезаписатьНаНовуюСЧФ_Корр = НЕ Источник.Ссылка = НоваяЗапись.СЧФ_Кор;
					ЭтоНоваяСЧФ_Корр            = НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ_Кор);
					
					Если ПерезаписатьНаНовуюСЧФ_Корр
						ИЛИ ЭтоНоваяСЧФ_Корр Тогда 
						
						// Если это создание новой СЧФ корр, перезапишем ссылку и сбросим статусы 
						НоваяЗапись.СЧФ_Кор          = Источник.Ссылка;
						НоваяЗапись.СуммаСЧФ_Кор     = Источник[СуммаДокументаСЧФ];
						НоваяЗапись.НомерИсправления = Источник[НомерИсправления];				
						
						Если ПерезаписатьНаНовуюСЧФ_Корр Тогда
							
							НоваяЗапись.Статус_DP_IZVPOL_04            = Ложь;
							НоваяЗапись.Статус_DP_IZVPOL_06            = Ложь;
							НоваяЗапись.Статус_DP_IZVPOL_10            = Ложь;
							НоваяЗапись.Статус_DP_PDPOL_02             = Ложь;
							НоваяЗапись.Статус_DP_UVUTOCH_09           = Ложь;
							НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11     = Ложь;
							НоваяЗапись.Статус_ON_KORSCHFDOPPR_01      = Ложь;
							НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
							НоваяЗапись.Статус_ON_NSCHFDOPPOK_11       = Ложь;
							НоваяЗапись.Статус_ON_NSCHFDOPPR_01        = Ложь;
							НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр   = Ложь;
							НоваяЗапись.Статус_DP_UVUTOCH_14           = Ложь;
							НоваяЗапись.Статус_DP_IZVPOL_13            = Ложь;
							НоваяЗапись.СтатусНаправление_DP_PRANNUL_12 = Неопределено;

						КонецЕсли;
						
						НаборЗаписей.Записать();
						
					ИначеЕсли Источник.Ссылка = НоваяЗапись.СЧФ_Кор Тогда
						// Если это перезапись уже существующей СЧФ корр, обновим 
						НоваяЗапись.СуммаСЧФ_Кор     = Источник[СуммаДокументаСЧФ];
						НоваяЗапись.НомерИсправления = Источник[НомерИсправления];	
						
						НаборЗаписей.Записать();
						
					КонецЕсли;
					
				Иначе
					ПерезаписатьНаНовуюСЧФ = НЕ Источник.Ссылка = НоваяЗапись.СЧФ;
					ЭтоНоваяСЧФ            = НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ);
					
					Если ПерезаписатьНаНовуюСЧФ
						ИЛИ ЭтоНоваяСЧФ Тогда 
						
						// Если это создание новой СЧФ, перезапишем ссылку и сбросим статусы 
						НоваяЗапись.СЧФ      = Источник.Ссылка;
						НоваяЗапись.СуммаСЧФ = Источник[СуммаДокументаСЧФ];			    
						
						Если ПерезаписатьНаНовуюСЧФ Тогда
							
							НоваяЗапись.Статус_DP_IZVPOL_04            = Ложь;
							НоваяЗапись.Статус_DP_IZVPOL_06            = Ложь;
							НоваяЗапись.Статус_DP_IZVPOL_10            = Ложь;
							НоваяЗапись.Статус_DP_PDPOL_02             = Ложь;
							НоваяЗапись.Статус_DP_UVUTOCH_09           = Ложь;
							НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11     = Ложь;
							НоваяЗапись.Статус_ON_KORSCHFDOPPR_01      = Ложь;
							НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
							НоваяЗапись.Статус_ON_NSCHFDOPPOK_11       = Ложь;
							НоваяЗапись.Статус_ON_NSCHFDOPPR_01        = Ложь;
							НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр   = Ложь;
							НоваяЗапись.Статус_DP_UVUTOCH_14           = Ложь;
							НоваяЗапись.Статус_DP_IZVPOL_13            = Ложь;
							НоваяЗапись.СтатусНаправление_DP_PRANNUL_12 = Неопределено;
							
						КонецЕсли;
						
						НаборЗаписей.Записать();
						
					ИначеЕсли Источник.Ссылка = НоваяЗапись.СЧФ Тогда
						// Если это перезапись уже существующей СЧФ, обновим 
						НоваяЗапись.СуммаСЧФ = Источник[СуммаДокументаСЧФ];
						
						НаборЗаписей.Записать();
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;		
		
	КонецЕсли;

