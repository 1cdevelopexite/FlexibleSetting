ТипДокументаЗаказа      = "ДокументСсылка.ЗаказПокупателя";
ТипДокументаРеализации     = "ДокументСсылка.РеализацияТоваровУслуг"; 
ТипДокументаКорректировкиРеализации = "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры = "ДокументСсылка.СчетФактураВыданный";

ИмяОрганизации          = "Организация";
ИмяКонтрагента          = "Контрагент";
ИмяТочкиДоставки        = "Грузополучатель";
ИмяДатаОтгрузки         = "ДатаОтгрузки";
ДатаЗаказа1С            = "ДатаВходящегоДокументаЭлектронногоОбмена";
НомерЗаказа1С           = "НомерВходящегоДокументаЭлектронногоОбмена";
ИмяЗаказа1С             = "Сделка";
ДокументОснованиеСЧФ    = "ДокументОснование";

// Заказ клиента.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда

        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.ORDERDATE.Установить(Источник.ДатаВходящегоДокументаЭлектронногоОбмена);
        НаборЗаписей.Отбор.Организация.Установить(Источник.Организация);
        НаборЗаписей.Отбор.Контрагент.Установить(Источник.Контрагент);
        НаборЗаписей.Отбор.ТочкаДоставки.Установить(Источник.Грузополучатель);
        НаборЗаписей.Отбор.ORDERNUMBER.Установить(Источник.НомерВходящегоДокументаЭлектронногоОбмена);

        ДанныеИзмерений = Новый Структура;
        ДанныеИзмерений.Вставить("Заказ",            Источник.Ссылка);
        ДанныеИзмерений.Вставить("Организация",        Источник[ИмяОрганизации]);
        ДанныеИзмерений.Вставить("Контрагент",        Источник[ИмяКонтрагента]);
        ДанныеИзмерений.Вставить("ТочкаДоставки",    Источник[ИмяТочкиДоставки]);

        ДанныеРесурсов = Новый Структура;
        ДанныеРесурсов.Вставить("ДатаПоставки",     Источник[ИмяДатаОтгрузки]);
        ДанныеРесурсов.Вставить("КоличествоЗаказ",    Источник.Товары.Итог("Количество"));
        ДанныеРесурсов.Вставить("СуммаЗаказ",        Источник.Товары.Итог("Сумма"));

        // Выполним блокировку данных.
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");            

        НаборЗаписей.Прочитать();
        Если НаборЗаписей.Количество() = 0 Тогда
            // Записываем документ в первый раз.
            ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НаборЗаписей.Добавить(), ДанныеИзмерений, ДанныеРесурсов); // записываем данные в регистр если они заполнены
        Иначе

            // Если существует документ в регистре.
            Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов); // записываем данные в регистр если они заполнены                    
            КонецЦикла;

        КонецЕсли;        

        Если НаборЗаписей.Модифицированность() Тогда
            НаборЗаписей.Записать();
        КонецЕсли;

    КонецЕсли;        

КонецЕсли;   

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда

        Если ЗначениеЗаполнено(Источник[ИмяЗаказа1С]) Тогда // Реализация была создана на основании заказа
            ДокументЗаказа = Источник[ИмяЗаказа1С];
        Иначе // Реализация создавалась на основании ORDER
            ДокументЗаказа = Источник.Ссылка; // Как сделать отбор если нет заказа? Мы же отказываемся от записи реализации в Эком документ
        КонецЕсли;
        // Поиск ЭКОМ документа.
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
            "ВЫБРАТЬ ПЕРВЫЕ 1
            |   ЭКОМ_ЦепочкиДокументовПоставщика.ORDERDATE,
            |   ЭКОМ_ЦепочкиДокументовПоставщика.Организация,
            |   ЭКОМ_ЦепочкиДокументовПоставщика.Контрагент,
            |   ЭКОМ_ЦепочкиДокументовПоставщика.ТочкаДоставки,
            |   ЭКОМ_ЦепочкиДокументовПоставщика.ORDERNUMBER,
            |   ЭКОМ_ЦепочкиДокументовПоставщика.ORDER
            |ИЗ
            |   РегистрСведений.ЭКОМ_ЦепочкиДокументовПоставщика КАК ЭКОМ_ЦепочкиДокументовПоставщика
            |ГДЕ
            |   ЭКОМ_ЦепочкиДокументовПоставщика.Заказ = &ДокументЗаказа";
        
        Запрос.УстановитьПараметр("ДокументЗаказа", ДокументЗаказа);
        
        РезультатЗапроса = Запрос.Выполнить();
        
        ДетальныеЗаписи = РезультатЗапроса.Выгрузить();
        
        Для Каждого Запись Из ДетальныеЗаписи Цикл
            НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
            Для Каждого Колонка Из ДетальныеЗаписи.Колонки Цикл
                НаборЗаписей.Отбор[Колонка.Имя].Установить(Запись[Колонка.Имя]);
            КонецЦикла;
            
            ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");

            НаборЗаписей.Прочитать();

            Если НЕ НаборЗаписей.Количество() = 0 Тогда

                ДанныеИзмерений = Новый Структура;
                ДанныеИзмерений.Вставить("Накладная",        Источник.Ссылка);

                ДанныеРесурсов = Новый Структура;
                ДанныеРесурсов.Вставить("КоличествоНакладная",     Источник.Товары.Итог("Количество"));
                ДанныеРесурсов.Вставить("СуммаНакладная",        Источник.Товары.Итог("Сумма"));
                ДанныеРесурсов.Вставить("СуммаНДСНакладная",    Источник.Товары.Итог("СуммаНДС"));

                // Если существует документ в регистре.
                Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                    ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
                КонецЦикла;

                Если НаборЗаписей.Модифицированность() Тогда
                    НаборЗаписей.Записать();
                КонецЕсли;

            КонецЕсли;
            
        КонецЦикла;
        
    КонецЕсли;        

КонецЕсли;

// Корректировка реализации.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировкиРеализации) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0
        И ТипЗнч(Источник.ДокументРеализации) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда

        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.Накладная.Установить(Источник.ДокументРеализации);

        // Выполним блокировку данных.
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");

        НаборЗаписей.Прочитать();

        Если НЕ НаборЗаписей.Количество() = 0 Тогда

            ДанныеИзмерений = Новый Структура;
            ДанныеИзмерений.Вставить("Накладная_Кор", Источник.Ссылка);

            ДанныеРесурсов = Новый Структура;
            ДанныеРесурсов.Вставить("КоличествоНакладная_Кор",    Источник.Товары.Итог("Количество"));
            ДанныеРесурсов.Вставить("СуммаНакладная_Кор",        Источник.Товары.Итог("Сумма"));
            ДанныеРесурсов.Вставить("СуммаНДСНакладная_Кор",    Источник.Товары.Итог("СуммаНДС"));

            // Если существует документ в регистре.
            Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
            КонецЦикла;

            Если НаборЗаписей.Модифицированность() Тогда
                НаборЗаписей.Записать();
            КонецЕсли;

        КонецЕсли;

    КонецЕсли;

КонецЕсли;

////////////////////////////////////////////////////////////////////////////////
// СчетФактураВыданный
//    
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда

    НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
    коррРТУ      = Неопределено; 
    РТУ          = Неопределено;
    ЗаказПокупателя = Неопределено;
    ДокументОснование = Источник[ДокументОснованиеСЧФ];
    Если ТипЗнч(ДокументОснование) = Тип(ТипДокументаРеализации) Тогда 
        РТУ = ДокументОснование;

    ИначеЕсли ТипЗнч(ДокументОснование) = Тип(ТипДокументаКорректировкиРеализации) Тогда
        коррРТУ = ДокументОснование;
        РТУ     = ПолучитьИсправляемыйДокументРеализации(коррРТУ,,"ДокументРеализации");

    КонецЕсли;

    ЭтоКорректировка = Источник.ВидСчетаФактуры = ПредопределенноеЗначение("Перечисление.ВидСчетаФактурыВыставленного.Корректировочный");
    ЭтоИсправление   = Источник.Исправление;      

    Организация   = Неопределено;
    Контрагент    = Неопределено;    
    ТочкаДоставки = Неопределено; 
    Если ЗначениеЗаполнено(РТУ) Тогда
        Организация   = РТУ[ИмяОрганизации];
        Контрагент    = РТУ[ИмяКонтрагента];    
        ТочкаДоставки = РТУ[ИмяТочкиДоставки];
        ЗаказПокупателя  = РТУ[ИмяЗаказа1С];
    КонецЕсли;

    ORDERDATE = Дата(0001, 01, 01);
    ORDERNUMBER = "";        
    Если ЗначениеЗаполнено(ЗаказПокупателя) Тогда
        ORDERDATE   = ЗаказПокупателя[ДатаЗаказа1С];
        ORDERNUMBER = ЗаказПокупателя[НомерЗаказа1С];        
    КонецЕсли;

    ДанныеОтбораЗаполнены = Ложь;
    СтруктураОтборов = Новый Структура;
    СтруктураОтборов.Вставить("ORDERDATE"    , ORDERDATE);
    СтруктураОтборов.Вставить("ORDERNUMBER"  , ORDERNUMBER);
    СтруктураОтборов.Вставить("Заказ"        , ЗаказПокупателя);
    СтруктураОтборов.Вставить("Организация"  , Организация);
    СтруктураОтборов.Вставить("Контрагент"   , Контрагент);
    СтруктураОтборов.Вставить("ТочкаДоставки", ТочкаДоставки);
    СтруктураОтборов.Вставить("Накладная"    , РТУ);
    СтруктураОтборов.Вставить("Накладная_Кор", коррРТУ);
    Для каждого Данные Из СтруктураОтборов Цикл
        Если ЗначениеЗаполнено(Данные.Значение) Тогда
            НаборЗаписей.Отбор[Данные.Ключ].Установить(Данные.Значение);
            ДанныеОтбораЗаполнены = Истина;
        КонецЕсли;
    КонецЦикла;

    Если ДанныеОтбораЗаполнены = Истина Тогда

        //Выполним блокировку данных
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");    
        НаборЗаписей.Прочитать();

        // Если существует запись в регистре
        Для Каждого НоваяЗапись Из НаборЗаписей Цикл

            Если ЭтоКорректировка 
                ИЛИ ЭтоИсправление Тогда // Значит текущая счет-фактура корректировочная/исправительная
                ПерезаписатьНаНовуюСЧФ_Корр = НЕ Источник.Ссылка = НоваяЗапись.СЧФ_Кор;
                ЭтоНоваяСЧФ_Корр            = НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ_Кор);

                Если ПерезаписатьНаНовуюСЧФ_Корр
                    ИЛИ ЭтоНоваяСЧФ_Корр Тогда 

                    // Если это создание новой СЧФ корр, перезапишем ссылку и сбросим статусы 
                    НоваяЗапись.СЧФ_Кор          = Источник.Ссылка;
                    НоваяЗапись.СуммаСЧФ_Кор     = коррРТУ.Товары.Итог("Сумма");
                    НоваяЗапись.НомерИсправления = Источник["НомерИсправления"];                

                    Если ПерезаписатьНаНовуюСЧФ_Корр Тогда

                        НоваяЗапись.Статус_DP_IZVPOL_04            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_06            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_10            = Ложь;
                        НоваяЗапись.Статус_DP_PDPOL_02             = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_09           = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11     = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01      = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOK_11       = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01        = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр   = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01_Испр = Ложь; 
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKMARK_11     = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKPROS_11     = Ложь;

                        НоваяЗапись.СтатусНаправление_DP_PRANNUL_12 = Перечисления.ЭКОМ_НаправлениеОбмена.ПустаяСсылка(); 
                        НоваяЗапись.Статус_DP_IZVPOL_13            = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_14           = Ложь;

                    КонецЕсли;

                    НаборЗаписей.Записать();

                ИначеЕсли Источник.Ссылка = НоваяЗапись.СЧФ_Кор Тогда
                    // Если это перезапись уже существующей СЧФ корр, обновим 
                    НоваяЗапись.СуммаСЧФ_Кор     = коррРТУ.Товары.Итог("Сумма");
                    НоваяЗапись.НомерИсправления = Источник["НомерИсправления"];    

                    НаборЗаписей.Записать();

                КонецЕсли;

            Иначе
                ПерезаписатьНаНовуюСЧФ = НЕ Источник.Ссылка = НоваяЗапись.СЧФ;
                ЭтоНоваяСЧФ            = НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ);

                Если ПерезаписатьНаНовуюСЧФ
                    ИЛИ ЭтоНоваяСЧФ Тогда 

                    // Если это создание новой СЧФ, перезапишем ссылку и сбросим статусы
                    НоваяЗапись.СЧФ      = Источник.Ссылка;
                    НоваяЗапись.СуммаСЧФ = РТУ.Товары.Итог("Сумма");                

                    Если ПерезаписатьНаНовуюСЧФ Тогда

                        НоваяЗапись.Статус_DP_IZVPOL_04            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_06            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_10            = Ложь;
                        НоваяЗапись.Статус_DP_PDPOL_02             = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_09           = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11     = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01      = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOK_11       = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01        = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр   = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01_Испр = Ложь; 
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKMARK_11     = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKPROS_11     = Ложь;

                        НоваяЗапись.СтатусНаправление_DP_PRANNUL_12 = Перечисления.ЭКОМ_НаправлениеОбмена.ПустаяСсылка(); 
                        НоваяЗапись.Статус_DP_IZVPOL_13            = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_14           = Ложь;

                    КонецЕсли;

                    НаборЗаписей.Записать();

                ИначеЕсли Источник.Ссылка = НоваяЗапись.СЧФ Тогда
                    // Если это перезапись уже существующей СЧФ, обновим 
                    НоваяЗапись.СуммаСЧФ = РТУ.Товары.Итог("Сумма");            
                    НаборЗаписей.Записать();

                КонецЕсли;

            КонецЕсли;

        КонецЦикла;

    КонецЕсли;        

КонецЕсли;