//ERP 2.4+
ТипДокументаЗаказа      = "ДокументСсылка.ЗаказКлиента";
ТипДокументаРеализации     = "ДокументСсылка.РеализацияТоваровУслуг"; 
ТипДокументаКорректировкиРеализации = "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры = "ДокументСсылка.СчетФактураВыданный";

ИмяОрганизации        = "Организация";
ИмяКонтрагента        = "Контрагент";
ИмяТочкиДоставки      = "Партнер";
ИмяЗаказа1С                = "ЗаказКлиента";
НомерЗаказа1С        = "НомерПоДаннымКлиента";
ДатаЗаказа1С            = "ДатаПоДаннымКлиента";
ДокументОснованиеСЧФ    = "ДокументОснование";

//Заказ покупателя
Если Тип_Заказ.СодержитТип(ТипЗнч(Источник.Ссылка)) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);

    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда

        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.ORDERDATE.Установить(Источник[ДатаЗаказа1С]);
        НаборЗаписей.Отбор.Организация.Установить(Источник[ИмяОрганизации]);
        НаборЗаписей.Отбор.Контрагент.Установить(Источник[ИмяКонтрагента]);
        НаборЗаписей.Отбор.ТочкаДоставки.Установить(Источник[ИмяТочкиДоставки]);
        НаборЗаписей.Отбор.ORDERNUMBER.Установить(Источник[НомерЗаказа1С]);

        НаборЗаписей.Прочитать();
        Если НаборЗаписей.Количество() > 0 Тогда
            ПерваяЗапись = НаборЗаписей[0];
            Если НЕ ЗначениеЗаполнено(ПерваяЗапись.Заказ) Тогда
                Для Каждого ПерваяЗапись Из НаборЗаписей Цикл
                    Если НЕ ЗначениеЗаполнено(ПерваяЗапись.Заказ) Тогда
                        ПерваяЗапись.Организация   = Источник[ИмяОрганизации];
                        ПерваяЗапись.Контрагент    = Источник[ИмяКонтрагента];
                        ПерваяЗапись.ТочкаДоставки = Источник[ИмяТочкиДоставки];

                        ПерваяЗапись.Заказ = Источник.Ссылка;
                        ПерваяЗапись.КоличествоЗаказ = Источник.Товары.Итог("Количество");
                        ПерваяЗапись.СуммаЗаказ = Источник.Товары.Итог("Сумма");
                    КонецЕслИ;
                КонецЦикла;    

                НаборЗаписей.Записать();
            Иначе
                //На случай разбиения ORDER на 2 и более Заказа покупателя
                НаборЗаписейДоп = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
                НаборЗаписейДоп.Отбор.ORDERDATE.Установить(ПерваяЗапись.ORDERDATE);
                НаборЗаписейДоп.Отбор.Организация.Установить(ПерваяЗапись.Организация);
                НаборЗаписейДоп.Отбор.Контрагент.Установить(ПерваяЗапись.Контрагент);
                НаборЗаписейДоп.Отбор.ТочкаДоставки.Установить(ПерваяЗапись.ТочкаДоставки);
                НаборЗаписейДоп.Отбор.ORDERNUMBER.Установить(ПерваяЗапись.ORDERNUMBER);
                НаборЗаписейДоп.Отбор.ORDER.Установить(ПерваяЗапись.ORDER);
                НаборЗаписейДоп.Отбор.Заказ.Установить(Источник.Ссылка);

                НаборЗаписейДоп.Прочитать();

                Если НаборЗаписейДоп.Количество() = 0 Тогда
                    НоваяЗапись = НаборЗаписейДоп.Добавить();
                КонецЕсли;

                Для Каждого НоваяЗапись Из НаборЗаписейДоп Цикл
                    НоваяЗапись.ORDERDATE    = ПерваяЗапись.ORDERDATE;
                    НоваяЗапись.ORDERNUMBER = ПерваяЗапись.ORDERNUMBER;
                    НоваяЗапись.ORDER        = ПерваяЗапись.ORDER;

                    НоваяЗапись.Организация   = ПерваяЗапись.Организация;
                    НоваяЗапись.Контрагент    = ПерваяЗапись.Контрагент;
                    НоваяЗапись.ТочкаДоставки = ПерваяЗапись.ТочкаДоставки;

                    НоваяЗапись.xmlКонтрагент = ПерваяЗапись.xmlКонтрагент;
                    НоваяЗапись.xmlОрганизация = ПерваяЗапись.xmlОрганизация;
                    НоваяЗапись.xmlТочкаДоставки = ПерваяЗапись.xmlТочкаДоставки;

                    НоваяЗапись.ДатаПоставки = ПерваяЗапись.ДатаПоставки;
                    НоваяЗапись.Статус_ORDER = ПерваяЗапись.Статус_ORDER;

                    НоваяЗапись.Заказ = Источник.Ссылка;
                    НоваяЗапись.КоличествоЗаказ = Источник.Товары.Итог("Количество");
                    НоваяЗапись.СуммаЗаказ = Источник.Товары.Итог("Сумма");
                КонецЦикла;    
                НаборЗаписейДоп.Записать();
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;            
КонецЕсли;    

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда

        Если ЗначениеЗаполнено(Источник[ИмяЗаказа1С]) Тогда // Реализация была создана на основании заказа
            ДокументЗаказа = Источник[ИмяЗаказа1С];
        Иначе // Реализация создавалась на основании ORDER
            ДокументЗаказа = Источник.Ссылка;
        КонецЕсли;
        // Поиск ЭКОМ документа.
        Запрос = Новый Запрос;
        Запрос.Текст =     "ВЫБРАТЬ
                           |    ЭКОМ_Документы.Ссылка КАК ORDER
                           |ПОМЕСТИТЬ вт
                           |ИЗ
                           |    Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
                           |ГДЕ
                           |    ЭКОМ_Документы.Документ1С = &Источник
                           |;
                           |
                           |////////////////////////////////////////////////////////////////////////////////
                           |ВЫБРАТЬ
                           |    вт.ORDER КАК ORDER
                           |ИЗ
                           |    вт КАК вт
                           |ГДЕ
                           |    вт.ORDER.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭКОМ_ВидыДокументов.ORDER_Входящий)";

        Запрос.УстановитьПараметр("Источник", ДокументЗаказа);

        РезультатЗапроса = Запрос.Выполнить();

        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

        Если ВыборкаДетальныеЗаписи.Следующий() Тогда

            НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.ORDER.Установить(ВыборкаДетальныеЗаписи.ORDER);

            // Выполним блокировку данных.
            ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");

            НаборЗаписей.Прочитать();

            Если НаборЗаписей.Количество() > 0 Тогда
                ПерваяЗапись = НаборЗаписей[0];
                Если НЕ ЗначениеЗаполнено(ПерваяЗапись.Накладная) Тогда
                    Для Каждого ПерваяЗапись Из НаборЗаписей Цикл
                        Если НЕ ЗначениеЗаполнено(ПерваяЗапись.Накладная) Тогда
                            ПерваяЗапись.Накладная           = Источник.Ссылка;
                            ПерваяЗапись.КоличествоНакладная = Источник.Товары.Итог("Количество");
                            ПерваяЗапись.СуммаНакладная      = Источник.Товары.Итог("Сумма"); 
                            ПерваяЗапись.СуммаНДСНакладная   = Источник.Товары.Итог("СуммаНДС"); 
                        КонецЕслИ;
                    КонецЦикла;    

                    НаборЗаписей.Записать();
                Иначе
                    //На случай разбиения ORDER на 2 и более Заказа покупателя
                    НаборЗаписейДоп = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
                    НаборЗаписейДоп.Отбор.ORDER.Установить(ПерваяЗапись.ORDER);
                    НаборЗаписейДоп.Отбор.Накладная.Установить(Источник.Ссылка);

                    НаборЗаписейДоп.Прочитать();

                    Если НаборЗаписейДоп.Количество() = 0 Тогда
                        НоваяЗапись = НаборЗаписейДоп.Добавить();
                    КонецЕсли;

                    Для Каждого НоваяЗапись Из НаборЗаписейДоп Цикл
                        НоваяЗапись.ORDERDATE    = ПерваяЗапись.ORDERDATE;
                        НоваяЗапись.ORDERNUMBER = ПерваяЗапись.ORDERNUMBER;
                        НоваяЗапись.ORDER        = ПерваяЗапись.ORDER;

                        НоваяЗапись.Организация   = ПерваяЗапись.Организация;
                        НоваяЗапись.Контрагент    = ПерваяЗапись.Контрагент;
                        НоваяЗапись.ТочкаДоставки = ПерваяЗапись.ТочкаДоставки;

                        НоваяЗапись.xmlКонтрагент = ПерваяЗапись.xmlКонтрагент;
                        НоваяЗапись.xmlОрганизация = ПерваяЗапись.xmlОрганизация;
                        НоваяЗапись.xmlТочкаДоставки = ПерваяЗапись.xmlТочкаДоставки;

                        НоваяЗапись.ДатаПоставки    = ПерваяЗапись.ДатаПоставки;
                        НоваяЗапись.Статус_ORDER    = ПерваяЗапись.Статус_ORDER;
                        НоваяЗапись.Статус_ORDRSP    = ПерваяЗапись.Статус_ORDRSP;

                        НоваяЗапись.Заказ            = ПерваяЗапись.Заказ;
                        НоваяЗапись.КоличествоЗаказ = ПерваяЗапись.КоличествоЗаказ;
                        НоваяЗапись.СуммаЗаказ        = ПерваяЗапись.СуммаЗаказ;

                        НоваяЗапись.Накладная           = Источник.Ссылка;
                        НоваяЗапись.КоличествоНакладная = Источник.Товары.Итог("Количество");
                        НоваяЗапись.СуммаНакладная      = Источник.Товары.Итог("Сумма"); 
                        НоваяЗапись.СуммаНДСНакладная   = Источник.Товары.Итог("СуммаНДС"); 

                    КонецЦикла;    
                    НаборЗаписейДоп.Записать();
                КонецЕсли;
            КонецЕсли;

        КонецЕсли;

    КонецЕсли;        

КонецЕсли;


//Корректировка реализации
Если Тип_Накладная_Кор.СодержитТип(ТипЗнч(Источник.Ссылка)) Тогда

    РТУ = ПолучитьИсправляемыйДокументРеализации(Источник,,"ДокументОснование");

    КонтрагентУчаствуетВЭДО = ЭКОМ_ПодпискаСобытий.КонтрагентУчаствуетВЭДО(РТУ[ИмяОрганизации], РТУ[ИмяКонтрагента], РТУ[ИмяТочкиДоставки]);

    Если НЕ КонтрагентУчаствуетВЭДО.Количество() = 0 Тогда

        ЗаказПокупателя = РТУ[ИмяЗаказа1С];

        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.ORDERDATE.Установить(ЗаказПокупателя[ДатаЗаказа1С]);
        НаборЗаписей.Отбор.Организация.Установить(РТУ[ИмяОрганизации]);
        НаборЗаписей.Отбор.Контрагент.Установить(РТУ[ИмяКонтрагента]);
        НаборЗаписей.Отбор.ТочкаДоставки.Установить(РТУ[ИмяТочкиДоставки]);
        НаборЗаписей.Отбор.ORDERNUMBER.Установить(ЗаказПокупателя[НомерЗаказа1С]);
        НаборЗаписей.Отбор.Заказ.Установить(ЗаказПокупателя);                     
        НаборЗаписей.Отбор.Накладная.Установить(РТУ);

        НаборЗаписей.Прочитать();

        Если НаборЗаписей.Количество() > 0 Тогда
            ПерваяЗапись = НаборЗаписей[0];
            Если НЕ ЗначениеЗаполнено(ПерваяЗапись.Накладная_Кор) Тогда
                Для Каждого ПерваяЗапись Из НаборЗаписей Цикл
                    Если НЕ ЗначениеЗаполнено(ПерваяЗапись.Накладная_Кор) Тогда
                        ПерваяЗапись.Накладная_Кор           = Источник.Ссылка;
                        ПерваяЗапись.КоличествоНакладная_Кор = Источник.Товары.Итог("Количество");
                        ПерваяЗапись.СуммаНакладная_Кор      = Источник.Товары.Итог("Сумма"); 
                        ПерваяЗапись.СуммаНДСНакладная_Кор   = Источник.Товары.Итог("СуммаНДС"); 
                    КонецЕслИ;
                КонецЦикла;    

                НаборЗаписей.Записать();
            Иначе
                //На случай разбиения ORDER на 2 и более Заказа покупателя
                НаборЗаписейДоп = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
                НаборЗаписейДоп.Отбор.ORDERDATE.Установить(ПерваяЗапись.ORDERDATE);
                НаборЗаписейДоп.Отбор.Организация.Установить(ПерваяЗапись.Организация);
                НаборЗаписейДоп.Отбор.Контрагент.Установить(ПерваяЗапись.Контрагент);
                НаборЗаписейДоп.Отбор.ТочкаДоставки.Установить(ПерваяЗапись.ТочкаДоставки);
                НаборЗаписейДоп.Отбор.ORDERNUMBER.Установить(ПерваяЗапись.ORDERNUMBER);
                НаборЗаписейДоп.Отбор.ORDER.Установить(ПерваяЗапись.ORDER);
                НаборЗаписейДоп.Отбор.Заказ.Установить(ПерваяЗапись.Заказ);
                НаборЗаписейДоп.Отбор.Накладная.Установить(ПерваяЗапись.Накладная);
                НаборЗаписейДоп.Отбор.Накладная_Кор.Установить(Источник.Ссылка);

                НаборЗаписейДоп.Прочитать();

                Если НаборЗаписейДоп.Количество() = 0 Тогда
                    НоваяЗапись = НаборЗаписейДоп.Добавить();
                КонецЕсли;

                Для Каждого НоваяЗапись Из НаборЗаписейДоп Цикл
                    НоваяЗапись.ORDERDATE    = ПерваяЗапись.ORDERDATE;
                    НоваяЗапись.ORDERNUMBER = ПерваяЗапись.ORDERNUMBER;
                    НоваяЗапись.ORDER        = ПерваяЗапись.ORDER;
                    НоваяЗапись.RECADV        = ПерваяЗапись.RECADV;

                    НоваяЗапись.Организация   = ПерваяЗапись.Организация;
                    НоваяЗапись.Контрагент    = ПерваяЗапись.Контрагент;
                    НоваяЗапись.ТочкаДоставки = ПерваяЗапись.ТочкаДоставки;

                    НоваяЗапись.xmlКонтрагент = ПерваяЗапись.xmlКонтрагент;
                    НоваяЗапись.xmlОрганизация = ПерваяЗапись.xmlОрганизация;
                    НоваяЗапись.xmlТочкаДоставки = ПерваяЗапись.xmlТочкаДоставки;

                    НоваяЗапись.ДатаПоставки    = ПерваяЗапись.ДатаПоставки;
                    НоваяЗапись.Статус_ORDER    = ПерваяЗапись.Статус_ORDER;
                    НоваяЗапись.Статус_ORDRSP    = ПерваяЗапись.Статус_ORDRSP;
                    НоваяЗапись.Статус_DESADV    = ПерваяЗапись.Статус_DESADV;
                    НоваяЗапись.Статус_RECADV    = ПерваяЗапись.Статус_RECADV;

                    НоваяЗапись.Заказ            = ПерваяЗапись.Заказ;
                    НоваяЗапись.КоличествоЗаказ = ПерваяЗапись.КоличествоЗаказ;
                    НоваяЗапись.СуммаЗаказ        = ПерваяЗапись.СуммаЗаказ;

                    НоваяЗапись.Накладная           = ПерваяЗапись.Накладная;
                    НоваяЗапись.КоличествоНакладная = ПерваяЗапись.КоличествоНакладная;
                    НоваяЗапись.СуммаНакладная      = ПерваяЗапись.СуммаНакладная; 
                    НоваяЗапись.СуммаНДСНакладная   = ПерваяЗапись.СуммаНДСНакладная; 

                    НоваяЗапись.СЧФ            = ПерваяЗапись.СЧФ;
                    НоваяЗапись.СуммаСЧФ    = ПерваяЗапись.СуммаСЧФ;

                    НоваяЗапись.Накладная_Кор           = Источник.Ссылка;
                    НоваяЗапись.КоличествоНакладная_Кор = Источник.Товары.Итог("Количество");
                    НоваяЗапись.СуммаНакладная_Кор      = Источник.Товары.Итог("Сумма"); 
                    НоваяЗапись.СуммаНДСНакладная_Кор   = Источник.Товары.Итог("СуммаНДС"); 

                КонецЦикла;    
                НаборЗаписейДоп.Записать();
            КонецЕсли;
        КонецЕсли;
    КонецЕсли
КонецЕсли;

//СчетФактураВыданный
Если Тип_СЧФ.СодержитТип(ТипЗнч(Источник.Ссылка)) Тогда

    ДокументОснование = Источник[ДокументОснованиеСЧФ];

    Если Тип_Накладная.СодержитТип(ТипЗнч(ДокументОснование)) Тогда

        РТУ = ДокументОснование;

        КонтрагентУчаствуетВЭДО = ЭКОМ_ПодпискаСобытий.КонтрагентУчаствуетВЭДО(РТУ[ИмяОрганизации], РТУ[ИмяКонтрагента], РТУ[ИмяТочкиДоставки]);

        Если НЕ КонтрагентУчаствуетВЭДО.Количество() = 0 Тогда

            ЗаказПокупателя = РТУ[ИмяЗаказа1С];        

            Если ЗначениеЗаполнено(ЗаказПокупателя)  Тогда

                НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();

                НаборЗаписей.Отбор.ORDERDATE.Установить(ЗаказПокупателя[ДатаЗаказа1С]);
                НаборЗаписей.Отбор.Организация.Установить(РТУ[ИмяОрганизации]);
                НаборЗаписей.Отбор.Контрагент.Установить(РТУ[ИмяКонтрагента]);
                НаборЗаписей.Отбор.ТочкаДоставки.Установить(РТУ[ИмяТочкиДоставки]);
                НаборЗаписей.Отбор.ORDERNUMBER.Установить(ЗаказПокупателя[НомерЗаказа1С]);
                НаборЗаписей.Отбор.Заказ.Установить(ЗаказПокупателя);
                НаборЗаписей.Отбор.Накладная.Установить(РТУ);

                НаборЗаписей.Прочитать();

                Для Каждого ПерваяЗапись Из НаборЗаписей Цикл
                    ПерваяЗапись.СЧФ = Источник.Ссылка;
                    ПерваяЗапись.СуммаСЧФ = РТУ.СуммаДокумента;
                КонецЦикла;    

                НаборЗаписей.Записать();

            КонецЕсли;


        КонецЕсли;
    КонецЕсли;

    Если Тип_Накладная_Кор.СодержитТип(ТипЗнч(ДокументОснование)) Тогда

        РТУ = ПолучитьИсправляемыйДокументРеализации(ДокументОснование,,"ДокументОснование");

        КонтрагентУчаствуетВЭДО = ЭКОМ_ПодпискаСобытий.КонтрагентУчаствуетВЭДО(РТУ[ИмяОрганизации], РТУ[ИмяКонтрагента], РТУ[ИмяТочкиДоставки]);

        Если НЕ КонтрагентУчаствуетВЭДО.Количество() = 0 Тогда

            ЗаказПокупателя = РТУ[ИмяЗаказа1С];

            Если ЗначениеЗаполнено(ЗаказПокупателя)  Тогда

                НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
                НаборЗаписей.Отбор.Организация.Установить(РТУ[ИмяОрганизации]);
                НаборЗаписей.Отбор.Контрагент.Установить(РТУ[ИмяКонтрагента]);
                НаборЗаписей.Отбор.ТочкаДоставки.Установить(РТУ[ИмяТочкиДоставки]);
                НаборЗаписей.Отбор.Заказ.Установить(ЗаказПокупателя);
                НаборЗаписей.Отбор.Накладная.Установить(РТУ);
                НаборЗаписей.Отбор.Накладная_Кор.Установить(ДокументОснование);

                НаборЗаписей.Прочитать();

                // Если существует запись в регистре
                Для Каждого НоваяЗапись Из НаборЗаписей Цикл


                    Если НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ_Кор) Тогда

                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01 = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01 = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01 = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01 = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
                        НоваяЗапись.Статус_DP_PDPOL_02 = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_04 = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_06 = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_09 = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_10 = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOK_11 = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11 = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKMARK_11 = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKPROS_11 = Ложь;

                    КонецЕсли;

                    НоваяЗапись.СЧФ_Кор          = Источник.Ссылка;
                    НоваяЗапись.СуммаСЧФ_Кор     = Источник.ДокументОснование.СуммаДокумента;
                    НоваяЗапись.НомерИсправления = Источник.НомерИсправления;

                КонецЦикла;    

                НаборЗаписей.Записать();    
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
КонецЕсли;    