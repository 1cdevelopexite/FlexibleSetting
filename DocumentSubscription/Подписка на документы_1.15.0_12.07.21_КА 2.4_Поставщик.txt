ТипДокументаЗаказа      			= "ДокументСсылка.ЗаказКлиента";
ТипДокументаРеализации    			= "ДокументСсылка.РеализацияТоваровУслуг";
ТипДокументаКорректировкиРеализации = "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры 			= "ДокументСсылка.СчетФактураВыданный";
ДокументВозвратТоваровОтКлиента     = "ДокументСсылка.ВозвратТоваровОтКлиента";

ИмяОрганизации           = "Организация";
ИмяКонтрагента           = "Контрагент";
ИмяТочкиДоставки         = "Партнер";
ИмяДатаОтгрузки          = "ЖелаемаяДатаОтгрузки";
ДатаЗаказа1С             = "ДатаПоДаннымКлиента";
НомерЗаказа1С            = "НомерПоДаннымКлиента";
НомерВходящегоДокумента  = "НомерВходящегоДокумента";
ДатаВходящегоДокумента   = "ДатаВходящегоДокумента";
ИмяЗаказа1С              = "ЗаказКлиента";
ДокументОснованиеСЧФ     = "ДокументОснование";
ОснованиеВозвратаКлиента = "ДокументРеализации";

// Заказ клиента.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда

        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.ORDERDATE.Установить(Источник.ДатаПоДаннымКлиента);
        НаборЗаписей.Отбор.Организация.Установить(Источник.Организация);
        НаборЗаписей.Отбор.Контрагент.Установить(Источник.Контрагент);
        НаборЗаписей.Отбор.ТочкаДоставки.Установить(Источник.Партнер);
        НаборЗаписей.Отбор.ORDERNUMBER.Установить(Источник.НомерПоДаннымКлиента);

        ДанныеИзмерений = Новый Структура;
        ДанныеИзмерений.Вставить("Заказ",            Источник.Ссылка);
        ДанныеИзмерений.Вставить("Организация",        Источник[ИмяОрганизации]);
        ДанныеИзмерений.Вставить("Контрагент",        Источник[ИмяКонтрагента]);
        ДанныеИзмерений.Вставить("ТочкаДоставки",    Источник[ИмяТочкиДоставки]);

        ДанныеРесурсов = Новый Структура;
        ДанныеРесурсов.Вставить("ДатаПоставки",     Источник[ИмяДатаОтгрузки]);
        ДанныеРесурсов.Вставить("КоличествоЗаказ",    Источник.Товары.Итог("Количество"));
        ДанныеРесурсов.Вставить("СуммаЗаказ",        Источник.Товары.Итог("Сумма"));

        // Выполним блокировку данных.
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");

        НаборЗаписей.Прочитать();
        Если НаборЗаписей.Количество() = 0 Тогда
            // Записываем документ в первый раз.
            ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НаборЗаписей.Добавить(), ДанныеИзмерений, ДанныеРесурсов); // записываем данные в регистр если они заполнены
        Иначе

            // Если существует документ в регистре.
            Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов); // записываем данные в регистр если они заполнены
            КонецЦикла;

        КонецЕсли;

        Если НаборЗаписей.Модифицированность() Тогда
            НаборЗаписей.Записать();
        КонецЕсли;

    КонецЕсли;

КонецЕсли;

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда

        Если ЗначениеЗаполнено(Источник[ИмяЗаказа1С]) Тогда // Реализация была создана на основании заказа
            ДокументЗаказа = Источник[ИмяЗаказа1С];
        Иначе // Реализация создавалась на основании ORDER
            ДокументЗаказа = Источник.Ссылка;
        КонецЕсли;
        // Поиск ЭКОМ документа.
        Запрос = Новый Запрос;
        Запрос.Текст =     "ВЫБРАТЬ
                           |    ЭКОМ_Документы.Ссылка КАК ORDER
                           |ПОМЕСТИТЬ вт
                           |ИЗ
                           |    Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
                           |ГДЕ
                           |    ЭКОМ_Документы.Документ1С = &Источник
                           |;
                           |
                           |////////////////////////////////////////////////////////////////////////////////
                           |ВЫБРАТЬ
                           |    вт.ORDER КАК ORDER
                           |ИЗ
                           |    вт КАК вт
                           |ГДЕ
                           |    вт.ORDER.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭКОМ_ВидыДокументов.ORDER_Входящий)";

        Запрос.УстановитьПараметр("Источник", ДокументЗаказа);

        РезультатЗапроса = Запрос.Выполнить();

        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

        Если ВыборкаДетальныеЗаписи.Следующий() Тогда

            НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
            НаборЗаписей.Отбор.ORDER.Установить(ВыборкаДетальныеЗаписи.ORDER);

            // Выполним блокировку данных.
            ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");

            НаборЗаписей.Прочитать();

            Если НЕ НаборЗаписей.Количество() = 0 Тогда

                ДанныеИзмерений = Новый Структура;
                ДанныеИзмерений.Вставить("Накладная",        Источник.Ссылка);
                ДанныеИзмерений.Вставить("Организация",     Источник[ИмяОрганизации]);
                ДанныеИзмерений.Вставить("Контрагент",        Источник[ИмяКонтрагента]);
                ДанныеИзмерений.Вставить("ТочкаДоставки",    Источник[ИмяТочкиДоставки]);

                ДанныеРесурсов = Новый Структура;
                ДанныеРесурсов.Вставить("КоличествоНакладная",     Источник.Товары.Итог("Количество"));
                ДанныеРесурсов.Вставить("СуммаНакладная",        Источник.Товары.Итог("Сумма"));
                ДанныеРесурсов.Вставить("СуммаНДСНакладная",    Источник.Товары.Итог("СуммаНДС"));

                // Если существует документ в регистре.
                Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                    ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
                КонецЦикла;

                Если НаборЗаписей.Модифицированность() Тогда
                    НаборЗаписей.Записать();
                КонецЕсли;

            КонецЕсли;

        КонецЕсли;

    КонецЕсли;

КонецЕсли;

// Корректировка реализации.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировкиРеализации) Тогда

    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0
        И ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда

        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.Накладная.Установить(Источник.ДокументОснование);

        // Выполним блокировку данных.
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");

        НаборЗаписей.Прочитать();

        Если НЕ НаборЗаписей.Количество() = 0 Тогда

            ДанныеИзмерений = Новый Структура;
            ДанныеИзмерений.Вставить("Накладная_Кор", Источник.Ссылка);

            ДанныеРесурсов = Новый Структура;
            ДанныеРесурсов.Вставить("КоличествоНакладная_Кор",    Источник.Товары.Итог("Количество"));
            ДанныеРесурсов.Вставить("СуммаНакладная_Кор",        Источник.Товары.Итог("Сумма"));
            ДанныеРесурсов.Вставить("СуммаНДСНакладная_Кор",    Источник.Товары.Итог("СуммаНДС"));

            // Если существует документ в регистре.
            Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
            КонецЦикла;

            Если НаборЗаписей.Модифицированность() Тогда
                НаборЗаписей.Записать();
            КонецЕсли;

        КонецЕсли;

    КонецЕсли;

КонецЕсли;

////////////////////////////////////////////////////////////////////////////////
// СчетФактураВыданный
//
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда

    НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
    коррРТУ      = Неопределено;
    РТУ          = Неопределено;
    ЗаказКлиента = Неопределено;
    ДокументОснование = Источник[ДокументОснованиеСЧФ];
    Если ТипЗнч(ДокументОснование) = Тип(ТипДокументаРеализации) Тогда
        РТУ = ДокументОснование;

    ИначеЕсли ТипЗнч(ДокументОснование) = Тип(ТипДокументаКорректировкиРеализации) Тогда
        коррРТУ = ДокументОснование;
        РТУ     = ПолучитьИсправляемыйДокументРеализации(коррРТУ,,"ДокументОснование");

    КонецЕсли;

    ЭтоКорректировка = Источник.Корректировочный;
    ЭтоИсправление   = Источник.Исправление;

    Организация   = Неопределено;
    Контрагент    = Неопределено;
    ТочкаДоставки = Неопределено;
    Если ЗначениеЗаполнено(РТУ) Тогда
        Организация   = РТУ[ИмяОрганизации];
        Контрагент    = РТУ[ИмяКонтрагента];
        ТочкаДоставки = РТУ[ИмяТочкиДоставки];
        ЗаказКлиента  = РТУ[ИмяЗаказа1С];
    КонецЕсли;

    ORDERDATE = Дата(0001, 01, 01);
    ORDERNUMBER = "";
    Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
        ORDERDATE   = ЗаказКлиента[ДатаЗаказа1С];
        ORDERNUMBER = ЗаказКлиента[НомерЗаказа1С];
    КонецЕсли;

    ДанныеОтбораЗаполнены = Ложь;
    СтруктураОтборов = Новый Структура;
    СтруктураОтборов.Вставить("ORDERDATE"    , ORDERDATE);
    СтруктураОтборов.Вставить("ORDERNUMBER"  , ORDERNUMBER);
    СтруктураОтборов.Вставить("Заказ"        , ЗаказКлиента);
    СтруктураОтборов.Вставить("Организация"  , Организация);
    СтруктураОтборов.Вставить("Контрагент"   , Контрагент);
    СтруктураОтборов.Вставить("ТочкаДоставки", ТочкаДоставки);
    СтруктураОтборов.Вставить("Накладная"    , РТУ);
    СтруктураОтборов.Вставить("Накладная_Кор", коррРТУ);
    Для каждого Данные Из СтруктураОтборов Цикл
        Если ЗначениеЗаполнено(Данные.Значение) Тогда
            НаборЗаписей.Отбор[Данные.Ключ].Установить(Данные.Значение);
            ДанныеОтбораЗаполнены = Истина;
        КонецЕсли;
    КонецЦикла;

    Если ДанныеОтбораЗаполнены = Истина Тогда

        //Выполним блокировку данных
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика");
        НаборЗаписей.Прочитать();

        // Если существует запись в регистре
        Для Каждого НоваяЗапись Из НаборЗаписей Цикл

			Если ЭтоКорректировка
				ИЛИ ЭтоИсправление Тогда // Значит текущая счет-фактура корректировочная/исправительная
                ПерезаписатьНаНовуюСЧФ_Корр = НЕ Источник.Ссылка = НоваяЗапись.СЧФ_Кор;
                ЭтоНоваяСЧФ_Корр            = НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ_Кор);

                Если ПерезаписатьНаНовуюСЧФ_Корр
                    ИЛИ ЭтоНоваяСЧФ_Корр Тогда

                    // Если это создание новой СЧФ корр, перезапишем ссылку и сбросим статусы
                    НоваяЗапись.СЧФ_Кор          = Источник.Ссылка;
                    НоваяЗапись.СуммаСЧФ_Кор     = коррРТУ.Товары.Итог("Сумма");
                    НоваяЗапись.НомерИсправления = Источник["НомерИсправления"];

                    Если ПерезаписатьНаНовуюСЧФ_Корр Тогда

                        НоваяЗапись.Статус_DP_IZVPOL_04            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_06            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_10            = Ложь;
                        НоваяЗапись.Статус_DP_PDPOL_02             = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_09           = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11     = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01      = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOK_11       = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01        = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр   = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKMARK_11     = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKPROS_11     = Ложь;

                        НоваяЗапись.СтатусНаправление_DP_PRANNUL_22 = Перечисления.ЭКОМ_НаправлениеОбмена.ПустаяСсылка();
                        НоваяЗапись.Статус_DP_IZVPOL_23            = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_24           = Ложь;
                        НоваяЗапись.СтатусЮЗД                       = ПредопределенноеЗначение("Перечисление.ЭКОМ_Статусы.ПустаяСсылка");
                        НоваяЗапись.КоличествоКвитанций             = 0;

                    КонецЕсли;

                    НаборЗаписей.Записать();

                ИначеЕсли Источник.Ссылка = НоваяЗапись.СЧФ_Кор Тогда
                    // Если это перезапись уже существующей СЧФ корр, обновим
                    НоваяЗапись.СуммаСЧФ_Кор     = коррРТУ.Товары.Итог("Сумма");
                    НоваяЗапись.НомерИсправления = Источник["НомерИсправления"];

                    НаборЗаписей.Записать();

                КонецЕсли;

            Иначе
                ПерезаписатьНаНовуюСЧФ = НЕ Источник.Ссылка = НоваяЗапись.СЧФ;
                ЭтоНоваяСЧФ            = НЕ ЗначениеЗаполнено(НоваяЗапись.СЧФ);

                Если ПерезаписатьНаНовуюСЧФ
                    ИЛИ ЭтоНоваяСЧФ Тогда

                    // Если это создание новой СЧФ, перезапишем ссылку и сбросим статусы
                    НоваяЗапись.СЧФ      = Источник.Ссылка;
                    НоваяЗапись.СуммаСЧФ = РТУ.Товары.Итог("Сумма");

                    Если ПерезаписатьНаНовуюСЧФ Тогда

                        НоваяЗапись.Статус_DP_IZVPOL_04            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_06            = Ложь;
                        НоваяЗапись.Статус_DP_IZVPOL_10            = Ложь;
                        НоваяЗапись.Статус_DP_PDPOL_02             = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_09           = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPOK_11     = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01      = Ложь;
                        НоваяЗапись.Статус_ON_KORSCHFDOPPR_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOK_11       = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01        = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPR_01_Испр   = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRMARK_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKMARK_11     = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01      = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPRPROS_01_Испр = Ложь;
                        НоваяЗапись.Статус_ON_NSCHFDOPPOKPROS_11     = Ложь;

                        НоваяЗапись.СтатусНаправление_DP_PRANNUL_22 = Перечисления.ЭКОМ_НаправлениеОбмена.ПустаяСсылка();
                        НоваяЗапись.Статус_DP_IZVPOL_23            = Ложь;
                        НоваяЗапись.Статус_DP_UVUTOCH_24           = Ложь;
                        НоваяЗапись.СтатусЮЗД                       = ПредопределенноеЗначение("Перечисление.ЭКОМ_Статусы.ПустаяСсылка");
                        НоваяЗапись.КоличествоКвитанций             = 0;

                    КонецЕсли;

                    НаборЗаписей.Записать();

                ИначеЕсли Источник.Ссылка = НоваяЗапись.СЧФ Тогда
                    // Если это перезапись уже существующей СЧФ, обновим
                    НоваяЗапись.СуммаСЧФ = РТУ.Товары.Итог("Сумма");
                    НаборЗаписей.Записать();

                КонецЕсли;

            КонецЕсли;

        КонецЦикла;

    КонецЕсли;

КонецЕсли;

// ВозвратТоваровОтКлиента
Если ТипЗнч(Источник.Ссылка) = Тип(ДокументВозвратТоваровОтКлиента) Тогда
	
	//проверка документа основания и наличия соответствующего реквизита у ВозвратТоваровОтКлиента
	РеквизитОснованиеСуществует = Метаданные.Документы.ВозвратТоваровОтКлиента.Реквизиты.Найти(ОснованиеВозвратаКлиента) <> Неопределено;
	Если РеквизитОснованиеСуществует И ЗначениеЗаполнено(Источник[ОснованиеВозвратаКлиента]) Тогда
	
		//поиск скуществующих записей по документу основания	
		НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПоставщика.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Накладная.Установить(Источник[ОснованиеВозвратаКлиента]);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() Тогда
		
			ДанныеИзмерений   = Новый Структура;
			ДанныеИзмерений.Вставить("ВозвратнаяНакладная", Источник.Ссылка);
			
			ДанныеРесурсов = Новый Структура;
			Если Источник.Проведен Тогда
				ДанныеРесурсов.Вставить("КоличествоВозврат", Источник.Товары.Итог("Количество"));
				ДанныеРесурсов.Вставить("СуммаВозврат", Источник.Товары.Итог("Сумма"));
			КонецЕсли;   	
			
			ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПоставщика"); 
			Для Каждого Запись Из НаборЗаписей Цикл
				ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(Запись, ДанныеИзмерений, ДанныеРесурсов);
			КонецЦикла;
			НаборЗаписей.Записать();
		
		КонецЕсли;//проверка наличия записей  		
	КонецЕсли;//проверка наличия реквизита и его заполненности
КонецЕсли;//проверка типа
