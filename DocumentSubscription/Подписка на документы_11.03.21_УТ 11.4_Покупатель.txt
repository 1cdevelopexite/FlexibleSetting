ТипДокументаЗаказа = "ДокументСсылка.ЗаказПоставщику";
ТипДокументаПоступления = "ДокументСсылка.ПриобретениеТоваровУслуг";
ТипДокументаСчетФактуры = "ДокументСсылка.СчетФактураПолученный";

ИмяОрганизации = "Организация";
ИмяКонтрагента = "Контрагент";
ИмяТочкиДоставки = "Склад";
ИмяДатаПоставки = "ЖелаемаяДатаПоступления";
ДатаЗаказа1С = "ДатаПоДаннымКлиента";
НомерЗаказа1С = "НомерПоДаннымКлиента";
НомерВходящегоДокумента = "НомерВходящегоДокумента";
ДатаВходящегоДокумента = "ДатаВходящегоДокумента";
ИмяЗаказа1С = "ЗаказПоставщику";

// Заказ поставщику
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда
    
    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
        
        ВыборкаУчастниковВЭДО.Следующий();
        
        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПокупателя.СоздатьНаборЗаписей();
        НаборЗаписей.Отбор.Заказ.Установить(Источник.Ссылка); // поле проиндексировано
        
        ДанныеИзмерений = Новый Структура;
        ДанныеИзмерений.Вставить("Заказ", Источник.Ссылка);
        ДанныеИзмерений.Вставить("ORDERDATE", Источник.Дата);
        ДанныеИзмерений.Вставить("ORDERNUMBER", Источник.Номер);
        ДанныеИзмерений.Вставить("Организация", Источник[ИмяОрганизации]);
        ДанныеИзмерений.Вставить("Контрагент", Источник[ИмяКонтрагента]);
        ДанныеИзмерений.Вставить("ТочкаДоставки", Источник[ИмяТочкиДоставки]);
        
        ДанныеРесурсов = Новый Структура;
        ДанныеРесурсов.Вставить("xmlОрганизация", ВыборкаУчастниковВЭДО.GLN_Организация);
        ДанныеРесурсов.Вставить("xmlКонтрагент", ВыборкаУчастниковВЭДО.GLN_Контрагент);
        ДанныеРесурсов.Вставить("xmlТочкаДоставки", ВыборкаУчастниковВЭДО.GLN_ТочкаДоставки);
        ДанныеРесурсов.Вставить("ДатаПоставки", Источник[ИмяДатаПоставки]);
        ДанныеРесурсов.Вставить("КоличествоЗаказ", Источник.Товары.Итог("Количество"));
        ДанныеРесурсов.Вставить("СуммаЗаказ", Источник.Товары.Итог("СуммаСНДС"));
        
        // Выполним блокировку данных
        ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПокупателя");
        
        НаборЗаписей.Прочитать();
        Если НаборЗаписей.Количество() = 0 Тогда
            // Записываем документ в первый раз
            ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НаборЗаписей.Добавить(), ДанныеИзмерений, ДанныеРесурсов); // записываем данные в регистр если они заполнены
            
        Иначе
            // Если существует документ в регистре
            Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов); // записываем данные в регистр если они заполнены
            КонецЦикла;
            
        КонецЕсли;
        
        НаборЗаписей.Записать();
        
    КонецЕсли;
    
КонецЕсли;

// Поступление
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаПоступления) Тогда
    
    ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
        
        ДокументЗаказа = Неопределено;
        Если ЗначениеЗаполнено(Источник[ИмяЗаказа1С]) Тогда
            ДокументЗаказа = Источник[ИмяЗаказа1С];
        КонецЕсли;
        
        НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПокупателя.СоздатьНаборЗаписей();
        
        ЗаписьНайдена = Ложь;
        
        // 1. Ищем по заказу
        Если ЗначениеЗаполнено(ДокументЗаказа) Тогда
            НаборЗаписей.Отбор.Заказ.Установить(ДокументЗаказа); // поле проиндексировано
            
            // Выполним блокировку данных
            ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПокупателя");
            
            НаборЗаписей.Прочитать();
            Если НЕ НаборЗаписей.Количество() = 0 Тогда
                ЗаписьНайдена = Истина;
            КонецЕсли;
        КонецЕсли;
        
        // 2. Поиск по дате и номеру десадва
        Если ЗаписьНайдена = Ложь Тогда
            
            DESADV = Неопределено;
            Запрос = Новый Запрос;
            Запрос.Текст =
                "ВЫБРАТЬ
                |    ЭКОМ_Документы.Ссылка КАК ЭКОМ_ДокументDESADV,
                |    ЭКОМ_Документы.Документ1С КАК Заказ
                |ИЗ
                |    Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
                |ГДЕ
                |    ЭКОМ_Документы.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭКОМ_ВидыДокументов.DESADV_Входящий)
                |    И ЭКОМ_Документы.НакладнаяДата = &НакладнаяДата
                |    И ЭКОМ_Документы.НакладнаяНомер = &НакладнаяНомер";
            
            Запрос.УстановитьПараметр("НакладнаяДата", Источник[ДатаВходящегоДокумента]);
            Запрос.УстановитьПараметр("НакладнаяНомер", Источник[НомерВходящегоДокумента]);
            РезультатЗапроса = Запрос.Выполнить();
            Если НЕ РезультатЗапроса.Пустой() Тогда
                Выборка = РезультатЗапроса.Выбрать();
                Выборка.Следующий();
                
                ДокументЗаказа = Выборка.Заказ;
                DESADV = Выборка.ЭКОМ_ДокументDESADV;
            КонецЕсли;
            
            
            ДанныеОтбораЗаполнены = Ложь;
            НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПокупателя.СоздатьНаборЗаписей();
            
            СтруктураОтбора = Новый Структура;
            СтруктураОтбора.Вставить("Заказ", ДокументЗаказа);
            СтруктураОтбора.Вставить("DESADV", DESADV);
            Для каждого Данные Из СтруктураОтбора Цикл
                Если ЗначениеЗаполнено(Данные.Значение) Тогда
                    НаборЗаписей.Отбор[Данные.Ключ].Установить(Данные.Значение);
                    ДанныеОтбораЗаполнены = Истина;
                КонецЕсли;
            КонецЦикла;
            
            // Выполним блокировку данных
            ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПокупателя");
            Если ДанныеОтбораЗаполнены Тогда
                НаборЗаписей.Прочитать();
                Если НЕ НаборЗаписей.Количество() = 0 Тогда
                    ЗаписьНайдена = Истина;
                КонецЕсли;
            КонецЕсли;
            
        КонецЕсли;
        
        Если ЗаписьНайдена Тогда
            
            ДанныеИзмерений = Новый Структура;
            ДанныеИзмерений.Вставить("Накладная", Источник.Ссылка);
            ДанныеИзмерений.Вставить("Организация", Источник[ИмяОрганизации]);
            ДанныеИзмерений.Вставить("Контрагент", Источник[ИмяКонтрагента]);
            ДанныеИзмерений.Вставить("ТочкаДоставки", Источник[ИмяТочкиДоставки]);
            
            ДанныеРесурсов = Новый Структура;
            ДанныеРесурсов.Вставить("КоличествоНакладная", Источник.Товары.Итог("Количество"));
            ДанныеРесурсов.Вставить("СуммаНакладная", Источник.Товары.Итог("СуммаСНДС"));
            ДанныеРесурсов.Вставить("СуммаНДСНакладная", Источник.Товары.Итог("СуммаНДС"));
            
            // Если существует документ в регистре
            Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                
                ДокументНакладная = Неопределено;
                Если НоваяЗапись.DESADV.ДокументыСвязанные.Количество() > 0 Тогда
                    ДокументНакладная = НоваяЗапись.DESADV.ДокументыСвязанные[0].ДокументСвязанный;
                    Если ДокументНакладная = Источник.Ссылка Тогда
                        ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
                    КонецЕсли;
                Иначе
                    ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
                КонецЕсли;
                
            КонецЦикла;
            
            НаборЗаписей.Записать();
            
        КонецЕсли;
        
    КонецЕсли;
    
КонецЕсли;

// СчетФактураПолученный
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда
    
    ДанныеИзмерений = Новый Структура;
    ДанныеИзмерений.Вставить("СЧФ", Источник.Ссылка);
    
    ДанныеРесурсов = Новый Структура;
    
    Для каждого СтрокаДокументОснование Из Источник.ДокументыОснования Цикл
        Если ТипЗнч(СтрокаДокументОснование.ДокументОснование) = Тип(ТипДокументаПоступления) Тогда
            
            ДокументПоступления = СтрокаДокументОснование.ДокументОснование;
            ДокументЗаказа = ДокументПоступления[ИмяЗаказа1С];
            
            ДанныеОтбораЗаполнены = Ложь;
            НаборЗаписей = РегистрыСведений.ЭКОМ_ЦепочкиДокументовПокупателя.СоздатьНаборЗаписей();
            
            СтруктураОтбора = Новый Структура;
            СтруктураОтбора.Вставить("Заказ", ДокументЗаказа);
            СтруктураОтбора.Вставить("Накладная", ДокументПоступления);
            Для каждого Данные Из СтруктураОтбора Цикл
                Если ЗначениеЗаполнено(Данные.Значение) Тогда
                    НаборЗаписей.Отбор[Данные.Ключ].Установить(Данные.Значение);
                    ДанныеОтбораЗаполнены = Истина;
                КонецЕсли;
            КонецЦикла;
            
            // Выполним блокировку данных
            ЭКОМ_ПодпискаСобытий.ВыполнитьБлокировкуНабораЗаписей(НаборЗаписей.Отбор, "ЭКОМ_ЦепочкиДокументовПокупателя");
            Если ДанныеОтбораЗаполнены Тогда
                НаборЗаписей.Прочитать();
                // Если существует документ в регистре
                Для Каждого НоваяЗапись Из НаборЗаписей Цикл
                    
                    ДанныеРесурсов.Вставить("СуммаСЧФ", НоваяЗапись.СуммаНакладная);
                    ЭКОМ_ПодпискаСобытий.СформироватьЗаписьВРегистр(НоваяЗапись, ДанныеИзмерений, ДанныеРесурсов);
                    
                КонецЦикла;
                
                НаборЗаписей.Записать();
                
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
КонецЕсли;